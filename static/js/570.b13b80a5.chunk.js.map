{"version":3,"file":"static/js/570.b13b80a5.chunk.js","mappings":"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","sources":["components/Card/ProductCard.tsx","components/Card/CategoryCard.tsx","components/Container/CategoryScrollableContainer.tsx","components/Default/ErrorContainer.tsx","components/Default/NoProductContainer.tsx","components/Container/ProductContainer.tsx","api/service/category.ts","hooks/useCategory.ts","api/service/product.ts","hooks/useProduct.ts","hooks/useTitle.ts","components/Carousel/MainCarousel.tsx","pages/Home/ProductShowcase.tsx","pages/Home/Home.tsx","styled/StyledXScrollableWrapper.ts"],"sourcesContent":["import {\n  AspectRatio,\n  Box,\n  Center,\n  Divider,\n  Flex,\n  Image,\n  Text,\n} from \"@chakra-ui/react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Icon from \"../../assets/icons\";\nimport { IProductPayload } from \"../../interfaces/Product\";\nimport routes from \"../../routes/Routes\";\nimport { formatCurrency, handleImageOnError } from \"../../util/util\";\n\nconst ProductCard = ({ ...props }: IProductPayload) => {\n  const navigate = useNavigate();\n\n  return (\n    <Box\n      onClick={() => navigate(routes.PDP(props.id, props.name))}\n      flexShrink={0}\n      w={{\n        base: \"49%\",\n        sm: \"49%\",\n        md: \"24%\",\n        lg: \"16%\",\n      }}\n      border={\"2px solid\"}\n      borderColor={\"light\"}\n      borderRadius={\"lg\"}\n      boxShadow={\"default\"}\n    >\n      <AspectRatio ratio={1} objectFit={\"cover\"} borderRadius={\"lg\"}>\n        <Image\n          src={props.product_photo?.url}\n          borderRadius={\"lg\"}\n          onError={handleImageOnError}\n        />\n      </AspectRatio>\n      <Flex p={3} direction={\"column\"}>\n        <Text\n          fontSize={\"xl\"}\n          fontWeight={\"semibold\"}\n          textTransform={\"uppercase\"}\n          noOfLines={1}\n        >\n          {props.name}\n        </Text>\n        <Text variant={\"productCardPrice\"} mb={1}>\n          Rp {formatCurrency(props.lowest_price!)}\n        </Text>\n        <Flex gap={2} alignItems={\"center\"} wrap={\"nowrap\"} mb={1}>\n          <Icon.Shop fill={\"primaryDarken\"} width={3.5} />\n          <Text\n            fontSize={\"xs\"}\n            fontWeight={\"semibold\"}\n            color={\"dark\"}\n            noOfLines={1}\n          >\n            {props.shop?.name}\n          </Text>\n        </Flex>\n        <Flex gap={2} alignItems={\"center\"} wrap={\"nowrap\"} mb={1}>\n          <Icon.Location fill={\"primaryDarken\"} width={3.5} />\n          <Text\n            fontSize={\"xs\"}\n            fontWeight={\"semibold\"}\n            color={\"dark\"}\n            noOfLines={1}\n          >\n            {props.shop?.location}\n          </Text>\n        </Flex>\n        <Flex gap={2} alignItems={\"center\"} mt={5}>\n          <Icon.Star fill={\"yellow.200\"} width={4} />\n          {props.rating! > 0 ? (\n            <>\n              <Text variant={\"productCardRating\"}>{props.rating}</Text>\n              <Text variant={\"productCardReview\"}>({props.total_review})</Text>\n            </>\n          ) : (\n            <Text variant={\"productCardRating\"}>-</Text>\n          )}\n          {props.unit_sold! > 0 && (\n            <>\n              <Center height=\"15px\">\n                <Divider orientation=\"vertical\" />\n              </Center>\n              <Text variant={\"productCardReview\"} noOfLines={1}>\n                {props.unit_sold} sold\n              </Text>\n            </>\n          )}\n        </Flex>\n      </Flex>\n    </Box>\n  );\n};\n\nexport default ProductCard;\n","import { AspectRatio, Flex, Image, Text } from \"@chakra-ui/react\";\nimport { ICategoryCardProps } from \"../../interfaces/Category\";\nimport { handleImageOnError } from \"../../util/util\";\n\nconst CategoryCard = ({ ...props }: ICategoryCardProps) => {\n  return (\n    <Flex\n      role=\"button\"\n      onClick={props.onClick}\n      direction={{ base: \"row\", lg: \"column\" }}\n      flexShrink={0}\n      w={{\n        base: \"200px\",\n        lg: \"125px\",\n      }}\n      h={{\n        base: \"50px\",\n        lg: \"auto\",\n      }}\n      border={\"2px solid\"}\n      borderColor={\"light\"}\n      borderRadius={\"lg\"}\n      boxShadow={\"default\"}\n    >\n      <AspectRatio\n        ratio={1}\n        flexShrink={0}\n        width={{ base: \"25%\", lg: \"100%\" }}\n        height={{ base: \"100%\", lg: \"auto\" }}\n        borderRadius={\"lg\"}\n      >\n        <Image\n          src={props.icon}\n          borderRadius={\"lg\"}\n          onError={handleImageOnError}\n        />\n      </AspectRatio>\n      <Text\n        align={\"center\"}\n        variant={\"productCardTitle\"}\n        mx={2}\n        my={3}\n        noOfLines={{ base: 1, lg: 2 }}\n      >\n        {props.name}\n      </Text>\n    </Flex>\n  );\n};\n\nexport default CategoryCard;\n","import {\n  Box,\n  Center,\n  Flex,\n  Heading,\n  Link,\n  Skeleton,\n  Text,\n  VStack,\n} from \"@chakra-ui/react\";\nimport { useNavigate } from \"react-router-dom\";\nimport slugify from \"slugify\";\nimport Icon from \"../../assets/icons\";\nimport { ICategoryScrollableContainerProps } from \"../../interfaces/Components\";\nimport routes from \"../../routes/Routes\";\nimport { XScrollableWrapper } from \"../../styled/StyledXScrollableWrapper\";\nimport CategoryCard from \"../Card/CategoryCard\";\n\nfunction CategoryScrollableContainer(props: ICategoryScrollableContainerProps) {\n  const {\n    label,\n    categoryLevel,\n    categories,\n    primaryURL,\n    secondaryURL,\n    isLoading,\n    onError,\n  } = props;\n  const navigate = useNavigate();\n\n  const handleCardOnClick = (categoryId: number, categoryURL: string) => {\n    switch (categoryLevel) {\n      case \"primary\":\n        navigate(routes.PRIMARY_CATEGORY(categoryURL));\n        return;\n      case \"secondary\":\n        navigate(\n          routes.SECONDARY_CATEGORY(primaryURL!, categoryURL, categoryId)\n        );\n        return;\n      case \"tertiary\":\n        navigate(\n          routes.TERTIARY_CATEGORY(\n            primaryURL!,\n            secondaryURL!,\n            categoryURL,\n            categoryId\n          )\n        );\n        return;\n      default:\n        return;\n    }\n  };\n\n  return (\n    <>\n      {categories.length !== 0 && (\n        <Flex direction={\"column\"} my={2}>\n          <Flex justifyContent={\"space-between\"}>\n            <Heading\n              variant={\"sectionHeading\"}\n              fontSize={{ base: \"md\", sm: \"xl\", md: \"2xl\" }}\n            >\n              {label ?? \"Category\"}\n            </Heading>\n          </Flex>\n          {onError ? (\n            <Box bgColor={\"lightLighten\"} py={28} borderRadius={\"lg\"}>\n              <Center>\n                <VStack>\n                  <Text>Something has occurred..</Text>\n                  <Text\n                    as={Link}\n                    href={\"#\"}\n                    variant={\"link\"}\n                    alignItems={\"center\"}\n                    fontSize={\"lg\"}\n                  >\n                    <Icon.Refresh width={4} pb={\"2px\"} me={2} />\n                    Refresh\n                  </Text>\n                </VStack>\n              </Center>\n            </Box>\n          ) : (\n            <Skeleton isLoaded={!isLoading} borderRadius={\"lg\"}>\n              <XScrollableWrapper showScrollbar>\n                {categories.map((category) => (\n                  <CategoryCard\n                    {...category!}\n                    key={category.id!}\n                    onClick={() =>\n                      handleCardOnClick(category.id, slugify(category.name))\n                    }\n                  />\n                ))}\n              </XScrollableWrapper>\n            </Skeleton>\n          )}\n        </Flex>\n      )}\n    </>\n  );\n}\n\nexport default CategoryScrollableContainer;\n","import { Box, Button, Center, Text, VStack } from \"@chakra-ui/react\";\nimport Icon from \"../../assets/icons\";\nimport { IErrorContainerProps } from \"../../interfaces/Components\";\n\nfunction ErrorContainer(props: IErrorContainerProps) {\n  const { onError } = props;\n\n  return (\n    <Box bgColor={\"lightLighten\"} py={28} borderRadius={\"lg\"}>\n      <Center>\n        <VStack>\n          <Text>Something has occurred..</Text>\n          <Text\n            as={Button}\n            onClick={() => onError && onError()}\n            alignItems={\"center\"}\n            fontSize={\"lg\"}\n          >\n            <Icon.Refresh width={4} pb={\"2px\"} me={2} />\n            Refresh\n          </Text>\n        </VStack>\n      </Center>\n    </Box>\n  );\n}\n\nexport default ErrorContainer;\n","import { Box, Button, Center, Text, VStack } from \"@chakra-ui/react\";\nimport Icon from \"../../assets/icons\";\nimport { INoProductContainerProps } from \"../../interfaces/Components\";\n\nfunction NoProductContainer(props: INoProductContainerProps) {\n  const { onReload } = props;\n\n  return (\n    <Box bgColor={\"lightLighten\"} py={28} borderRadius={\"lg\"}>\n      <Center>\n        <VStack>\n          <Text>No products to display.</Text>\n          <Text\n            as={Button}\n            onClick={() => onReload && onReload()}\n            alignItems={\"center\"}\n            fontSize={\"lg\"}\n          >\n            <Icon.Refresh width={4} pb={\"2px\"} me={2} />\n            Refresh\n          </Text>\n        </VStack>\n      </Center>\n    </Box>\n  );\n}\n\nexport default NoProductContainer;\n","import {\n  Button,\n  Center,\n  Flex,\n  Heading,\n  HStack,\n  Skeleton,\n  Text,\n} from \"@chakra-ui/react\";\nimport Icon from \"../../assets/icons\";\nimport { IProductContainerProps } from \"../../interfaces/Components\";\nimport ProductCard from \"../Card/ProductCard\";\nimport ErrorContainer from \"../Default/ErrorContainer\";\nimport NoProductContainer from \"../Default/NoProductContainer\";\n\nfunction ProductContainer(props: IProductContainerProps) {\n  const {\n    products,\n    label,\n    isLoading,\n    isError,\n    onError,\n    loadMoreLabel,\n    onLoadMore,\n    seeMoreLabel,\n    onSeeMore,\n  } = props;\n  return (\n    <Flex direction={{ base: \"column\", lg: \"column\" }} my={10}>\n      <Flex justifyContent={\"space-between\"}>\n        <Heading\n          variant={\"sectionHeading\"}\n          fontSize={{ base: \"md\", sm: \"xl\", md: \"2xl\" }}\n        >\n          {label}\n        </Heading>\n        {onSeeMore && (\n          <HStack alignItems={\"center\"}>\n            <Text variant={\"link\"} onClick={onSeeMore}>\n              {seeMoreLabel ?? \"see more\"}\n              <Icon.ChevronRight width={4} pb={\"2px\"} />\n            </Text>\n          </HStack>\n        )}\n      </Flex>\n      {isError ? (\n        <ErrorContainer onError={onError} />\n      ) : (\n        <>\n          {products.length === 0 ? (\n            <NoProductContainer onReload={onError} />\n          ) : (\n            <Skeleton isLoaded={!isLoading} borderRadius={\"lg\"}>\n              <Flex\n                wrap={\"wrap\"}\n                direction={\"row\"}\n                justifyContent={\n                  products.length <= 6 ? \"start\" : \"space-between\"\n                }\n                rowGap={{ base: 1, sm: 3, lg: 2 }}\n                columnGap={{ base: 1, sm: 2, lg: 1 }}\n                _after={{\n                  md: { content: '\"\"', flex: \"auto\" },\n                  lg: { content: \"none\" },\n                }}\n              >\n                {products.length !== 0 &&\n                  products.map((product) => (\n                    <ProductCard key={product.id} {...product} />\n                  ))}\n              </Flex>\n              {onLoadMore && (\n                <Center mt={5}>\n                  <Button variant={\"primary\"} onClick={() => onLoadMore()}>\n                    {loadMoreLabel ?? \"See All Products\"}\n                  </Button>\n                </Center>\n              )}\n            </Skeleton>\n          )}\n        </>\n      )}\n    </Flex>\n  );\n}\n\nexport default ProductContainer;\n","import { ICategoryResponsePayload } from \"../../interfaces/Category\";\nimport instance from \"../config/axios\";\nimport { API_PATH } from \"../path\";\n\nconst getAllCategory = async (): Promise<ICategoryResponsePayload> => {\n  try {\n    const response = await instance.get<ICategoryResponsePayload>(\n      API_PATH.category.CATEGORIES\n    );\n\n    return response.data;\n  } catch (err) {\n    return err as ICategoryResponsePayload;\n  }\n};\n\nconst getAllCategoryProduct = async (\n  name?: string\n): Promise<ICategoryResponsePayload> => {\n  try {\n    const response = await instance.get<ICategoryResponsePayload>(\n      API_PATH.category.CATEGORIES_PRODUCT + `?name=${name}`\n    );\n\n    return response.data;\n  } catch (err) {\n    return err as ICategoryResponsePayload;\n  }\n};\n\nconst categoryService = {\n  getAllCategory,\n  getAllCategoryProduct,\n};\n\nexport default categoryService;\n","import { useEffect, useState } from \"react\";\nimport categoryService from \"../api/service/category\";\nimport { storeCategories } from \"../redux/category\";\nimport { useAppDispatch, useAppSelector } from \"./useSelector\";\nimport slugify from \"slugify\";\nimport { IPrimaryCategoryPayload } from \"../interfaces/Category\";\n\nconst useCategory = (isMounted: boolean = true) => {\n  const categories = useAppSelector((state) => state.category.categories);\n  const dispatch = useAppDispatch();\n  const [categoriesProduct, setCategoriesProduct] = useState<\n    IPrimaryCategoryPayload[]\n  >([]);\n  const [categoryLoading, setCategoryLoading] = useState(false);\n\n  const fetchCategories = async () => {\n    setCategoryLoading(true);\n    const response = await categoryService.getAllCategory();\n\n    if (response.is_success) {\n      dispatch(storeCategories(response.data));\n\n      setCategoryLoading(false);\n      return;\n    }\n\n    setCategoryLoading(false);\n    return;\n  };\n\n  const fetchCategoriesProduct = async (name?: string) => {\n    const response = await categoryService.getAllCategoryProduct(name);\n\n    if (response.is_success) {\n      setCategoriesProduct(response.data);\n    }\n  };\n\n  const fetchPrimaryCategoryBySlugifiedName = (slugifiedName: string) => {\n    const category = categories.find((category) => {\n      return slugify(category.name) === slugifiedName;\n    });\n    return category;\n  };\n\n  const fetchSecondaryCategoryBySlugifiedName = (\n    primarySlugifiedName: string,\n    secondarySlugifiedName: string\n  ) => {\n    const primaryCategory =\n      fetchPrimaryCategoryBySlugifiedName(primarySlugifiedName);\n    const secondaryCategory = primaryCategory?.secondary_category?.find(\n      (category) => {\n        return slugify(category.name) === secondarySlugifiedName;\n      }\n    );\n    return secondaryCategory;\n  };\n\n  const fetchTertiaryCategoryBySlugifiedName = (\n    primarySlugifiedName: string,\n    secondarySlugifiedName: string,\n    tertiarySlugifiedName: string\n  ) => {\n    const secondaryCategory = fetchSecondaryCategoryBySlugifiedName(\n      primarySlugifiedName,\n      secondarySlugifiedName\n    );\n    const tertiaryCategory = secondaryCategory?.tertiary_category?.find(\n      (category) => {\n        return slugify(category.name) === tertiarySlugifiedName;\n      }\n    );\n    return tertiaryCategory;\n  };\n\n  useEffect(() => {\n    if (categories.length === 0 && isMounted) {\n      fetchCategories();\n    }\n  }, []);\n\n  return {\n    categories,\n    categoriesProduct,\n    categoryLoading,\n\n    fetchCategoriesProduct,\n    fetchPrimaryCategoryBySlugifiedName,\n    fetchSecondaryCategoryBySlugifiedName,\n    fetchTertiaryCategoryBySlugifiedName,\n  };\n};\n\nexport default useCategory;\n","import { ISearchFilterPayload } from \"../../interfaces/Filter\";\nimport {\n  IProductResponsePayload,\n  IProductReviewsResponsePayload,\n  IProductsResponsePayload,\n} from \"../../interfaces/Product\";\nimport instance from \"../config/axios\";\nimport { API_PATH } from \"../path\";\n\nconst getProduct = async (id: number): Promise<IProductResponsePayload> => {\n  try {\n    const response = await instance.get<IProductResponsePayload>(\n      API_PATH.product.PRODUCTS + \"/\" + id\n    );\n\n    return response.data;\n  } catch (err) {\n    return err as IProductResponsePayload;\n  }\n};\n\nconst getAllProducts = async (\n  filter?: ISearchFilterPayload\n): Promise<IProductsResponsePayload> => {\n  try {\n    const response = await instance.get<IProductsResponsePayload>(\n      API_PATH.product.PRODUCTS,\n      {\n        params: filter,\n      }\n    );\n\n    return response.data;\n  } catch (err) {\n    return err as IProductsResponsePayload;\n  }\n};\n\nconst getShopProducts = async (\n  shopId: number,\n  filter?: ISearchFilterPayload\n): Promise<IProductsResponsePayload> => {\n  try {\n    const response = await instance.get<IProductsResponsePayload>(\n      API_PATH.product.PRODUCTS_SHOP + \"/\" + shopId,\n      {\n        params: filter,\n      }\n    );\n\n    return response.data;\n  } catch (err) {\n    return err as IProductsResponsePayload;\n  }\n};\n\nconst getProductReviews = async (\n  id: number,\n  filter?: ISearchFilterPayload\n): Promise<IProductReviewsResponsePayload> => {\n  try {\n    const response = await instance.get<IProductReviewsResponsePayload>(\n      API_PATH.product.PRODUCTS_REVIEWS + \"/\" + id,\n      {\n        params: filter,\n      }\n    );\n\n    return response.data;\n  } catch (err) {\n    return err as IProductReviewsResponsePayload;\n  }\n};\n\nconst productService = {\n  getProduct,\n  getAllProducts,\n  getShopProducts,\n  getProductReviews,\n};\n\nexport default productService;\n","import productService from \"../api/service/product\";\nimport { ISearchFilterPayload } from \"../interfaces/Filter\";\nimport { storeProductPagination } from \"../redux/product\";\nimport { useAppDispatch, useAppSelector } from \"./useSelector\";\n\nconst useProduct = () => {\n  const products = useAppSelector((state) => state.product.products);\n  const dispatch = useAppDispatch();\n\n  const fetchAllProducts = async (filter?: ISearchFilterPayload) => {\n    const response = await productService.getAllProducts(filter);\n\n    if (response.is_success) {\n      dispatch(storeProductPagination(response.data));\n      return response.data;\n    }\n\n    return null;\n  };\n\n  const fetchProduct = async (productId: number) => {\n    const response = await productService.getProduct(productId);\n\n    if (response.is_success) {\n      return response.data;\n    }\n\n    return null;\n  };\n\n  const fetchShopProducts = async (\n    shopId: number,\n    filter: ISearchFilterPayload\n  ) => {\n    const response = await productService.getShopProducts(shopId, filter);\n\n    if (response.is_success) {\n      return response.data;\n    }\n\n    return null;\n  };\n\n  const fetchProductReviews = async (\n    id: number,\n    filter?: ISearchFilterPayload\n  ) => {\n    const response = await productService.getProductReviews(id, filter);\n\n    if (response.is_success) {\n      return response.data;\n    }\n\n    return null;\n  };\n\n  return {\n    products,\n    fetchAllProducts,\n    fetchProduct,\n    fetchShopProducts,\n    fetchProductReviews,\n  };\n};\n\nexport default useProduct;\n","import React, { useEffect } from \"react\";\n\nconst useTitle = (title = \"BAZR\") => {\n  const titleDom = document.getElementById(\"title\") as HTMLTitleElement;\n\n  useEffect(() => {\n    titleDom.innerHTML = title;\n  }, [title]);\n};\n\nexport default useTitle;\n","import { AspectRatio, Image } from \"@chakra-ui/react\";\nimport { Navigation, Pagination } from \"swiper\";\nimport \"swiper/css\";\nimport \"swiper/css/navigation\";\nimport \"swiper/css/pagination\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport { IMainCarouselProps } from \"../../interfaces/Components\";\nimport \"./style.css\";\n\nfunction MainCarousel(props: IMainCarouselProps) {\n  return (\n    <Swiper\n      slidesPerView={1}\n      spaceBetween={30}\n      loop={true}\n      pagination={{\n        clickable: true,\n      }}\n      navigation={true}\n      modules={[Pagination, Navigation]}\n      className=\"mySwiper\"\n    >\n      {content.map((url, index) => (\n        <SwiperSlide key={index}>\n          <AspectRatio\n            ratio={21 / 7}\n            borderRadius={{ base: \"10px\", md: \"20px\", lg: \"30px\" }}\n            boxShadow=\"default\"\n          >\n            <Image\n              src={url}\n              borderRadius={{ base: \"10px\", md: \"20px\", lg: \"30px\" }}\n              borderColor={`teal.300`}\n            />\n          </AspectRatio>\n        </SwiperSlide>\n      ))}\n    </Swiper>\n  );\n}\n\nexport default MainCarousel;\n\nconst content = [\n  \"https://res.cloudinary.com/dk3xvbob3/image/upload/v1672978311/BAZR/DB/Carousel/Blog_Banner-Tokopedia-Fair_ofk48c.jpg\",\n  \"https://res.cloudinary.com/dk3xvbob3/image/upload/v1672978322/BAZR/DB/Carousel/06df6f5e-6477-4f0f-a194-21569793e17d_jn6c8q.png\",\n  \"https://res.cloudinary.com/dk3xvbob3/image/upload/v1672973337/BAZR/DB/Carousel/f09b50a8-da23-45de-a931-f2a433e8276a.jpg_aca4iy.jpg\",\n];\n","import { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport ProductContainer from \"../../components/Container/ProductContainer\";\nimport useProduct from \"../../hooks/useProduct\";\n\nfunction ProductShowcase() {\n  const navigate = useNavigate();\n  const { products, fetchAllProducts } = useProduct();\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    fetchAllProducts({\n      limit: 18,\n      sortBy: \"view_count\",\n    }).finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <ProductContainer\n      products={products.data}\n      label={\"Recommended\"}\n      isLoading={isLoading}\n      onLoadMore={() => navigate(\"/search?q=\")}\n    />\n  );\n}\n\nexport default ProductShowcase;\n","import { Container } from \"@chakra-ui/react\";\nimport MainCarousel from \"../../components/Carousel/MainCarousel\";\nimport CategoryScrollableContainer from \"../../components/Container/CategoryScrollableContainer\";\nimport useCategory from \"../../hooks/useCategory\";\nimport useTitle from \"../../hooks/useTitle\";\nimport ProductShowcase from \"./ProductShowcase\";\n\nconst Home = () => {\n  useTitle(\"Home | BAZR\");\n  const { categories } = useCategory();\n\n  return (\n    <Container maxW=\"container.xl\">\n      <MainCarousel />\n      <CategoryScrollableContainer\n        categories={categories}\n        categoryLevel={\"primary\"}\n      />\n      <ProductShowcase />\n    </Container>\n  );\n};\n\nexport default Home;\n","import styled from \"styled-components\";\n\nexport const XScrollableWrapper = styled.div<{ showScrollbar?: boolean }>`\n  display: flex;\n  flex-direction: row;\n  gap: 0.5rem;\n  padding-bottom: 5px;\n  overflow-x: scroll;\n\n  &:hover {\n    ::-webkit-scrollbar {\n      height: 5px;\n    }\n\n    ::-webkit-scrollbar-track {\n      display: ${(props) => (props.showScrollbar ? \"flex\" : \"none\")};\n      box-shadow: inset 0 0 2px #4fd1c5;\n      border-radius: 10px;\n    }\n\n    ::-webkit-scrollbar-thumb {\n      background: #4fd1c5;\n      border-radius: 10px;\n    }\n  }\n\n  ::-webkit-scrollbar {\n    height: 5px;\n  }\n\n  ::-webkit-scrollbar-track {\n    border-radius: 10px;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background: transparent;\n  }\n`;\n"],"names":["props","navigate","useNavigate","onClick","routes","id","name","flexShrink","w","base","sm","md","lg","border","borderColor","borderRadius","boxShadow","ratio","objectFit","src","product_photo","url","onError","handleImageOnError","p","direction","fontSize","fontWeight","textTransform","noOfLines","variant","mb","formatCurrency","lowest_price","gap","alignItems","wrap","fill","width","color","shop","location","mt","rating","total_review","unit_sold","height","orientation","role","h","icon","align","mx","my","label","categoryLevel","categories","primaryURL","secondaryURL","isLoading","length","justifyContent","bgColor","py","as","Link","href","pb","me","isLoaded","showScrollbar","map","category","key","categoryId","categoryURL","handleCardOnClick","slugify","Button","onReload","products","isError","loadMoreLabel","onLoadMore","seeMoreLabel","onSeeMore","rowGap","columnGap","_after","content","flex","product","ProductCard","getAllCategory","instance","API_PATH","response","data","getAllCategoryProduct","isMounted","useAppSelector","state","dispatch","useAppDispatch","useState","categoriesProduct","setCategoriesProduct","categoryLoading","setCategoryLoading","fetchCategories","categoryService","is_success","storeCategories","fetchCategoriesProduct","fetchPrimaryCategoryBySlugifiedName","slugifiedName","find","fetchSecondaryCategoryBySlugifiedName","primarySlugifiedName","secondarySlugifiedName","primaryCategory","secondaryCategory","secondary_category","fetchTertiaryCategoryBySlugifiedName","tertiarySlugifiedName","tertiaryCategory","tertiary_category","useEffect","getProduct","getAllProducts","filter","params","getShopProducts","shopId","getProductReviews","fetchAllProducts","productService","storeProductPagination","fetchProduct","productId","fetchShopProducts","fetchProductReviews","title","titleDom","document","getElementById","innerHTML","slidesPerView","spaceBetween","loop","pagination","clickable","navigation","modules","Pagination","Navigation","className","index","useProduct","setIsLoading","limit","sortBy","finally","ProductContainer","useTitle","useCategory","maxW","CategoryScrollableContainer","XScrollableWrapper","styled"],"sourceRoot":""}
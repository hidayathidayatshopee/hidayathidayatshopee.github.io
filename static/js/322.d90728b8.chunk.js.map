{"version":3,"file":"static/js/322.d90728b8.chunk.js","mappings":"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","sources":["components/Card/ProductCard.tsx","components/Card/CategoryCard.tsx","components/Container/CategoryScrollableContainer.tsx","api/service/category.ts","hooks/useCategory.ts","api/service/product.ts","hooks/useProduct.ts","hooks/useTitle.ts","components/Carousel/MainCarousel.tsx","components/Default/ErrorContainer.tsx","components/Default/NoProductContainer.tsx","components/Container/ProductContainer.tsx","pages/Home/ProductShowcase.tsx","pages/Home/Home.tsx","styled/StyledXScrollableWrapper.ts"],"sourcesContent":["import {\n  AspectRatio,\n  Box,\n  Center,\n  Divider,\n  Flex,\n  Image,\n  Text,\n} from \"@chakra-ui/react\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Icon from \"../../assets/icons\";\nimport { IProductPayload } from \"../../interfaces/Product\";\nimport { formatCurrency, handleImageOnError } from \"../../util/util\";\n\nconst ProductCard = ({ ...props }: IProductPayload) => {\n  const navigate = useNavigate();\n\n  const [isHover, setIsHover] = useState(false);\n\n  return (\n    <Box\n      onClick={() =>\n        navigate(\n          `/pdp/${props.id}/${props.name\n            .replace(/[^\\w]+/gm, \" \")\n            .split(\" \")\n            .join(\"-\")}`\n        )\n      }\n      flexShrink={0}\n      w={{\n        base: \"49%\",\n        sm: \"49%\",\n        md: \"24%\",\n        lg: \"16%\",\n      }}\n      border={\"2px solid\"}\n      borderColor={\"light\"}\n      borderRadius={\"lg\"}\n      boxShadow={\"default\"}\n      onMouseEnter={() => setIsHover(true)}\n      onMouseLeave={() => setIsHover(false)}\n    >\n      <AspectRatio ratio={1} objectFit={\"cover\"} borderRadius={\"lg\"}>\n        <Image\n          src={props.product_photo?.url}\n          borderRadius={\"lg\"}\n          onError={handleImageOnError}\n        />\n      </AspectRatio>\n      <Flex p={3} direction={\"column\"}>\n        <Text variant={\"productCardTitle\"} noOfLines={1}>\n          {props.name}\n        </Text>\n        <Text\n          variant={\"productCardPrice\"}\n          __css={{\n            marginTop: 0,\n          }}\n        >\n          Rp {formatCurrency(props.lowest_price!)}\n        </Text>\n        <Flex gap={2} alignItems={\"center\"} wrap={\"nowrap\"}>\n          <Icon.Shop fill={\"secondary\"} width={3.5} />\n          <Text variant={\"productCardRating\"} noOfLines={1}>\n            {props.shop?.name}\n          </Text>\n          <Center height=\"15px\">\n            <Divider orientation=\"vertical\" />\n          </Center>\n          <Icon.Location fill={\"secondary\"} width={3.5} />\n          <Text variant={\"productCardRating\"} noOfLines={1}>\n            {props.shop?.location}\n          </Text>\n        </Flex>\n        <Flex gap={2} alignItems={\"center\"} mt={5}>\n          <Icon.Star fill={\"yellow.300\"} width={4} />\n          {props.rating! > 0 ? (\n            <>\n              <Text variant={\"productCardRating\"}>{props.rating}</Text>\n              <Text variant={\"productCardReview\"}>({props.total_review})</Text>\n            </>\n          ) : (\n            <Text variant={\"productCardRating\"}>-</Text>\n          )}\n          {props.unit_sold! > 0 && (\n            <>\n              <Center height=\"15px\">\n                <Divider orientation=\"vertical\" />\n              </Center>\n              <Text variant={\"productCardReview\"}>{props.unit_sold} sold</Text>\n            </>\n          )}\n        </Flex>\n      </Flex>\n    </Box>\n  );\n};\n\nexport default ProductCard;\n","import { AspectRatio, Flex, Image, Text } from \"@chakra-ui/react\";\nimport { ICategoryCardProps } from \"../../interfaces/Category\";\nimport { handleImageOnError } from \"../../util/util\";\n\nconst CategoryCard = ({ ...props }: ICategoryCardProps) => {\n  return (\n    <Flex\n      role=\"button\"\n      onClick={props.onClick}\n      direction={{ base: \"row\", lg: \"column\" }}\n      flexShrink={0}\n      w={{\n        base: \"200px\",\n        lg: \"125px\",\n      }}\n      h={{\n        base: \"50px\",\n        lg: \"auto\",\n      }}\n      border={\"2px solid\"}\n      borderColor={\"light\"}\n      borderRadius={\"lg\"}\n      boxShadow={\"default\"}\n    >\n      <AspectRatio\n        ratio={1}\n        flexShrink={0}\n        width={{ base: \"25%\", lg: \"100%\" }}\n        height={{ base: \"100%\", lg: \"auto\" }}\n        borderRadius={\"lg\"}\n      >\n        <Image\n          src={props.icon}\n          borderRadius={\"lg\"}\n          onError={handleImageOnError}\n        />\n      </AspectRatio>\n      <Text\n        align={\"center\"}\n        variant={\"productCardTitle\"}\n        mx={2}\n        my={3}\n        noOfLines={{ base: 1, lg: 2 }}\n      >\n        {props.name}\n      </Text>\n    </Flex>\n  );\n};\n\nexport default CategoryCard;\n","import {\n  Box,\n  Center,\n  Flex,\n  Heading,\n  Link,\n  Skeleton,\n  Text,\n  VStack,\n} from \"@chakra-ui/react\";\nimport { useNavigate } from \"react-router-dom\";\nimport slugify from \"slugify\";\nimport Icon from \"../../assets/icons\";\nimport { ICategoryScrollableContainerProps } from \"../../interfaces/Components\";\nimport routes from \"../../routes/Routes\";\nimport { XScrollableWrapper } from \"../../styled/StyledXScrollableWrapper\";\nimport CategoryCard from \"../Card/CategoryCard\";\n\nfunction CategoryScrollableContainer(props: ICategoryScrollableContainerProps) {\n  const {\n    label,\n    categoryLevel,\n    categories,\n    primaryURL,\n    secondaryURL,\n    isLoading,\n    onError,\n  } = props;\n  const navigate = useNavigate();\n\n  const handleCardOnClick = (categoryId: number, categoryURL: string) => {\n    switch (categoryLevel) {\n      case \"primary\":\n        navigate(routes.PRIMARY_CATEGORY(categoryURL));\n        return;\n      case \"secondary\":\n        navigate(\n          routes.SECONDARY_CATEGORY(primaryURL!, categoryURL, categoryId)\n        );\n        return;\n      case \"tertiary\":\n        navigate(\n          routes.TERTIARY_CATEGORY(\n            primaryURL!,\n            secondaryURL!,\n            categoryURL,\n            categoryId\n          )\n        );\n        return;\n      default:\n        return;\n    }\n  };\n\n  return (\n    <>\n      {categories.length !== 0 && (\n        <Flex direction={\"column\"} my={2}>\n          <Flex justifyContent={\"space-between\"}>\n            <Heading\n              variant={\"sectionHeading\"}\n              fontSize={{ base: \"md\", sm: \"xl\", md: \"2xl\" }}\n            >\n              {label ?? \"Category\"}\n            </Heading>\n          </Flex>\n          {onError ? (\n            <Box bgColor={\"lightLighten\"} py={28} borderRadius={\"lg\"}>\n              <Center>\n                <VStack>\n                  <Text>Something has occurred..</Text>\n                  <Text\n                    as={Link}\n                    href={\"#\"}\n                    variant={\"link\"}\n                    alignItems={\"center\"}\n                    fontSize={\"lg\"}\n                  >\n                    <Icon.Refresh width={4} pb={\"2px\"} me={2} />\n                    Refresh\n                  </Text>\n                </VStack>\n              </Center>\n            </Box>\n          ) : (\n            <Skeleton isLoaded={!isLoading} borderRadius={\"lg\"}>\n              <XScrollableWrapper>\n                {categories.map((category) => (\n                  <CategoryCard\n                    {...category!}\n                    key={category.id!}\n                    onClick={() =>\n                      handleCardOnClick(category.id, slugify(category.name))\n                    }\n                  />\n                ))}\n              </XScrollableWrapper>\n            </Skeleton>\n          )}\n        </Flex>\n      )}\n    </>\n  );\n}\n\nexport default CategoryScrollableContainer;\n","import { ICategoryResponsePayload } from \"../../interfaces/Category\";\nimport instance from \"../config/axios\";\nimport { API_PATH } from \"../path\";\n\nconst getAllCategory = async (): Promise<ICategoryResponsePayload> => {\n  try {\n    const response = await instance.get<ICategoryResponsePayload>(\n      API_PATH.category.CATEGORIES\n    );\n\n    return response.data;\n  } catch (err) {\n    return err as ICategoryResponsePayload;\n  }\n};\n\nconst getAllCategoryProduct = async (\n  name?: string\n): Promise<ICategoryResponsePayload> => {\n  try {\n    const response = await instance.get<ICategoryResponsePayload>(\n      API_PATH.category.CATEGORIES_PRODUCT + `?name=${name}`\n    );\n\n    return response.data;\n  } catch (err) {\n    return err as ICategoryResponsePayload;\n  }\n};\n\nconst categoryService = {\n  getAllCategory,\n  getAllCategoryProduct,\n};\n\nexport default categoryService;\n","import { useEffect, useState } from \"react\";\nimport categoryService from \"../api/service/category\";\nimport { storeCategories } from \"../redux/category\";\nimport { useAppDispatch, useAppSelector } from \"./useSelector\";\nimport slugify from \"slugify\";\nimport { IPrimaryCategoryPayload } from \"../interfaces/Category\";\n\nconst useCategory = (isMounted: boolean = true) => {\n  const categories = useAppSelector((state) => state.category.categories);\n  const dispatch = useAppDispatch();\n  const [categoriesProduct, setCategoriesProduct] = useState<\n    IPrimaryCategoryPayload[]\n  >([]);\n  const [categoryLoading, setCategoryLoading] = useState(false);\n\n  const fetchCategories = async () => {\n    setCategoryLoading(true);\n    const response = await categoryService.getAllCategory();\n\n    if (response.is_success) {\n      dispatch(storeCategories(response.data));\n\n      setCategoryLoading(false);\n      return;\n    }\n\n    setCategoryLoading(false);\n    return;\n  };\n\n  const fetchCategoriesProduct = async (name?: string) => {\n    const response = await categoryService.getAllCategoryProduct(name);\n\n    if (response.is_success) {\n      setCategoriesProduct(response.data);\n    }\n  };\n\n  const fetchPrimaryCategoryBySlugifiedName = (slugifiedName: string) => {\n    const category = categories.find((category) => {\n      return slugify(category.name) === slugifiedName;\n    });\n    return category;\n  };\n\n  const fetchSecondaryCategoryBySlugifiedName = (\n    primarySlugifiedName: string,\n    secondarySlugifiedName: string\n  ) => {\n    const primaryCategory =\n      fetchPrimaryCategoryBySlugifiedName(primarySlugifiedName);\n    const secondaryCategory = primaryCategory?.secondary_category?.find(\n      (category) => {\n        return slugify(category.name) === secondarySlugifiedName;\n      }\n    );\n    return secondaryCategory;\n  };\n\n  const fetchTertiaryCategoryBySlugifiedName = (\n    primarySlugifiedName: string,\n    secondarySlugifiedName: string,\n    tertiarySlugifiedName: string\n  ) => {\n    const secondaryCategory = fetchSecondaryCategoryBySlugifiedName(\n      primarySlugifiedName,\n      secondarySlugifiedName\n    );\n    const tertiaryCategory = secondaryCategory?.tertiary_category?.find(\n      (category) => {\n        return slugify(category.name) === tertiarySlugifiedName;\n      }\n    );\n    return tertiaryCategory;\n  };\n\n  useEffect(() => {\n    if (categories.length === 0 && isMounted) {\n      fetchCategories();\n    }\n  }, []);\n\n  return {\n    categories,\n    categoriesProduct,\n    categoryLoading,\n\n    fetchCategoriesProduct,\n    fetchPrimaryCategoryBySlugifiedName,\n    fetchSecondaryCategoryBySlugifiedName,\n    fetchTertiaryCategoryBySlugifiedName,\n  };\n};\n\nexport default useCategory;\n","import { ISearchFilterPayload } from \"../../interfaces/Filter\";\nimport {\n  IProductResponsePayload,\n  IProductReviewsResponsePayload,\n  IProductsResponsePayload,\n} from \"../../interfaces/Product\";\nimport instance from \"../config/axios\";\nimport { API_PATH } from \"../path\";\n\nconst getProduct = async (id: number): Promise<IProductResponsePayload> => {\n  try {\n    const response = await instance.get<IProductResponsePayload>(\n      API_PATH.product.PRODUCTS + \"/\" + id\n    );\n\n    return response.data;\n  } catch (err) {\n    return err as IProductResponsePayload;\n  }\n};\n\nconst getAllProducts = async (\n  filter?: ISearchFilterPayload\n): Promise<IProductsResponsePayload> => {\n  try {\n    const response = await instance.get<IProductsResponsePayload>(\n      API_PATH.product.PRODUCTS,\n      {\n        params: filter,\n      }\n    );\n\n    return response.data;\n  } catch (err) {\n    return err as IProductsResponsePayload;\n  }\n};\n\nconst getShopProducts = async (\n  shopId: number,\n  filter?: ISearchFilterPayload\n): Promise<IProductsResponsePayload> => {\n  try {\n    const response = await instance.get<IProductsResponsePayload>(\n      API_PATH.product.PRODUCTS_SHOP + \"/\" + shopId,\n      {\n        params: filter,\n      }\n    );\n\n    return response.data;\n  } catch (err) {\n    return err as IProductsResponsePayload;\n  }\n};\n\nconst getProductReviews = async (\n  id: number,\n  filter?: ISearchFilterPayload\n): Promise<IProductReviewsResponsePayload> => {\n  try {\n    const response = await instance.get<IProductReviewsResponsePayload>(\n      API_PATH.product.PRODUCTS_REVIEWS + \"/\" + id,\n      {\n        params: filter,\n      }\n    );\n\n    return response.data;\n  } catch (err) {\n    return err as IProductReviewsResponsePayload;\n  }\n};\n\nconst productService = {\n  getProduct,\n  getAllProducts,\n  getShopProducts,\n  getProductReviews,\n};\n\nexport default productService;\n","import productService from \"../api/service/product\";\nimport { ISearchFilterPayload } from \"../interfaces/Filter\";\nimport { storeProductPagination } from \"../redux/product\";\nimport { useAppDispatch, useAppSelector } from \"./useSelector\";\n\nconst useProduct = () => {\n  const products = useAppSelector((state) => state.product.products);\n  const dispatch = useAppDispatch();\n\n  const fetchAllProducts = async (filter?: ISearchFilterPayload) => {\n    const response = await productService.getAllProducts(filter);\n\n    if (response.is_success) {\n      dispatch(storeProductPagination(response.data));\n      return response.data;\n    }\n\n    return null;\n  };\n\n  const fetchProduct = async (productId: number) => {\n    const response = await productService.getProduct(productId);\n\n    if (response.is_success) {\n      return response.data;\n    }\n\n    return null;\n  };\n\n  const fetchShopProducts = async (\n    shopId: number,\n    filter: ISearchFilterPayload\n  ) => {\n    const response = await productService.getShopProducts(shopId, filter);\n\n    if (response.is_success) {\n      return response.data;\n    }\n\n    return null;\n  };\n\n  const fetchProductReviews = async (\n    id: number,\n    filter?: ISearchFilterPayload\n  ) => {\n    const response = await productService.getProductReviews(id, filter);\n\n    if (response.is_success) {\n      return response.data;\n    }\n\n    return null;\n  };\n\n  return {\n    products,\n    fetchAllProducts,\n    fetchProduct,\n    fetchShopProducts,\n    fetchProductReviews,\n  };\n};\n\nexport default useProduct;\n","import React, { useEffect } from \"react\";\n\nconst useTitle = (title = \"BAZR\") => {\n  const titleDom = document.getElementById(\"title\") as HTMLTitleElement;\n\n  useEffect(() => {\n    titleDom.innerHTML = title;\n  }, [title]);\n};\n\nexport default useTitle;\n","import { AspectRatio, Image } from \"@chakra-ui/react\";\nimport { Navigation, Pagination } from \"swiper\";\nimport \"swiper/css\";\nimport \"swiper/css/navigation\";\nimport \"swiper/css/pagination\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport { IMainCarouselProps } from \"../../interfaces/Components\";\nimport \"./style.css\";\n\nfunction MainCarousel(props: IMainCarouselProps) {\n  return (\n    <Swiper\n      slidesPerView={1}\n      spaceBetween={30}\n      loop={true}\n      pagination={{\n        clickable: true,\n      }}\n      navigation={true}\n      modules={[Pagination, Navigation]}\n      className=\"mySwiper\"\n    >\n      {content.map((url, index) => (\n        <SwiperSlide key={index}>\n          <AspectRatio\n            ratio={21 / 7}\n            borderRadius={{ base: \"10px\", md: \"20px\", lg: \"30px\" }}\n            boxShadow=\"default\"\n          >\n            <Image\n              src={url}\n              borderRadius={{ base: \"10px\", md: \"20px\", lg: \"30px\" }}\n              borderColor={`teal.300`}\n            />\n          </AspectRatio>\n        </SwiperSlide>\n      ))}\n    </Swiper>\n  );\n}\n\nexport default MainCarousel;\n\nconst content = [\n  \"https://res.cloudinary.com/dk3xvbob3/image/upload/v1672978311/BAZR/DB/Carousel/Blog_Banner-Tokopedia-Fair_ofk48c.jpg\",\n  \"https://res.cloudinary.com/dk3xvbob3/image/upload/v1672978322/BAZR/DB/Carousel/06df6f5e-6477-4f0f-a194-21569793e17d_jn6c8q.png\",\n  \"https://res.cloudinary.com/dk3xvbob3/image/upload/v1672973337/BAZR/DB/Carousel/f09b50a8-da23-45de-a931-f2a433e8276a.jpg_aca4iy.jpg\",\n];\n","import { Box, Button, Center, Text, VStack } from \"@chakra-ui/react\";\nimport Icon from \"../../assets/icons\";\nimport { IErrorContainerProps } from \"../../interfaces/Components\";\n\nfunction ErrorContainer(props: IErrorContainerProps) {\n  const { onError } = props;\n\n  return (\n    <Box bgColor={\"lightLighten\"} py={28} borderRadius={\"lg\"}>\n      <Center>\n        <VStack>\n          <Text>Something has occurred..</Text>\n          <Text\n            as={Button}\n            onClick={() => onError && onError()}\n            alignItems={\"center\"}\n            fontSize={\"lg\"}\n          >\n            <Icon.Refresh width={4} pb={\"2px\"} me={2} />\n            Refresh\n          </Text>\n        </VStack>\n      </Center>\n    </Box>\n  );\n}\n\nexport default ErrorContainer;\n","import { Box, Button, Center, Text, VStack } from \"@chakra-ui/react\";\nimport Icon from \"../../assets/icons\";\nimport { INoProductContainerProps } from \"../../interfaces/Components\";\n\nfunction NoProductContainer(props: INoProductContainerProps) {\n  const { onReload } = props;\n\n  return (\n    <Box bgColor={\"lightLighten\"} py={28} borderRadius={\"lg\"}>\n      <Center>\n        <VStack>\n          <Text>No products to display.</Text>\n          <Text\n            as={Button}\n            onClick={() => onReload && onReload()}\n            alignItems={\"center\"}\n            fontSize={\"lg\"}\n          >\n            <Icon.Refresh width={4} pb={\"2px\"} me={2} />\n            Refresh\n          </Text>\n        </VStack>\n      </Center>\n    </Box>\n  );\n}\n\nexport default NoProductContainer;\n","import { Button, Center, Flex, Heading, Skeleton } from \"@chakra-ui/react\";\nimport { IProductContainerProps } from \"../../interfaces/Components\";\nimport ProductCard from \"../Card/ProductCard\";\nimport ErrorContainer from \"../Default/ErrorContainer\";\nimport NoProductContainer from \"../Default/NoProductContainer\";\n\nfunction ProductContainer(props: IProductContainerProps) {\n  const { products, label, isLoading, isError, onError, onLoadMore } = props;\n  return (\n    <Flex direction={{ base: \"column\", lg: \"column\" }} my={10}>\n      <Flex justifyContent={\"space-between\"}>\n        <Heading\n          variant={\"sectionHeading\"}\n          fontSize={{ base: \"md\", sm: \"xl\", md: \"2xl\" }}\n        >\n          {label}\n        </Heading>\n      </Flex>\n      {isError ? (\n        <ErrorContainer onError={onError} />\n      ) : (\n        <>\n          {products.length === 0 ? (\n            <NoProductContainer onReload={onError} />\n          ) : (\n            <Skeleton isLoaded={!isLoading} borderRadius={\"lg\"}>\n              <Flex\n                wrap={\"wrap\"}\n                direction={\"row\"}\n                justifyContent={\"space-between\"}\n                rowGap={{ base: 1, sm: 3, lg: 2 }}\n                columnGap={{ base: 1, sm: 2, lg: 1 }}\n                _after={{\n                  md: { content: '\"\"', flex: \"auto\" },\n                  lg: { content: \"none\" },\n                }}\n              >\n                {products.length !== 0 &&\n                  products.map((product) => (\n                    <ProductCard key={product.id} {...product} />\n                  ))}\n              </Flex>\n              {onLoadMore && (\n                <Center mt={5}>\n                  <Button variant={\"primary\"} onClick={() => onLoadMore()}>\n                    See All Products\n                  </Button>\n                </Center>\n              )}\n            </Skeleton>\n          )}\n        </>\n      )}\n    </Flex>\n  );\n}\n\nexport default ProductContainer;\n","import { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport ProductContainer from \"../../components/Container/ProductContainer\";\nimport useProduct from \"../../hooks/useProduct\";\n\nfunction ProductShowcase() {\n  const navigate = useNavigate();\n  const { products, fetchAllProducts } = useProduct();\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    fetchAllProducts({\n      limit: 18,\n      sortBy: \"unit_sold\",\n    }).finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <ProductContainer\n      products={products.data}\n      label={\"Recommended\"}\n      isLoading={isLoading}\n      onLoadMore={() => navigate(\"/search?q=\")}\n    />\n  );\n}\n\nexport default ProductShowcase;\n","import { Container } from \"@chakra-ui/react\";\nimport MainCarousel from \"../../components/Carousel/MainCarousel\";\nimport CategoryScrollableContainer from \"../../components/Container/CategoryScrollableContainer\";\nimport useCategory from \"../../hooks/useCategory\";\nimport useTitle from \"../../hooks/useTitle\";\nimport ProductShowcase from \"./ProductShowcase\";\n\nconst Home = () => {\n  useTitle(\"Home | BAZR\");\n  const { categories } = useCategory();\n\n  return (\n    <Container maxW=\"container.xl\">\n      <MainCarousel />\n      <CategoryScrollableContainer\n        categories={categories}\n        categoryLevel={\"primary\"}\n      />\n      <ProductShowcase />\n    </Container>\n  );\n};\n\nexport default Home;\n","import styled from \"styled-components\";\n\nexport const XScrollableWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 1rem;\n  padding-bottom: 5px;\n  overflow-x: scroll;\n\n  &:hover {\n    ::-webkit-scrollbar {\n      height: 5px;\n    }\n\n    ::-webkit-scrollbar-track {\n      box-shadow: inset 0 0 2px #319795;\n      border-radius: 10px;\n    }\n\n    ::-webkit-scrollbar-thumb {\n      background: #38b2ac;\n      border-radius: 10px;\n    }\n  }\n\n  ::-webkit-scrollbar {\n    height: 5px;\n  }\n\n  ::-webkit-scrollbar-track {\n    border-radius: 10px;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background: white;\n  }\n`;\n"],"names":["props","navigate","useNavigate","useState","setIsHover","onClick","id","name","replace","split","join","flexShrink","w","base","sm","md","lg","border","borderColor","borderRadius","boxShadow","onMouseEnter","onMouseLeave","ratio","objectFit","src","product_photo","url","onError","handleImageOnError","p","direction","variant","noOfLines","__css","marginTop","formatCurrency","lowest_price","gap","alignItems","wrap","fill","width","shop","height","orientation","location","mt","rating","total_review","unit_sold","role","h","icon","align","mx","my","label","categoryLevel","categories","primaryURL","secondaryURL","isLoading","length","justifyContent","fontSize","bgColor","py","as","Link","href","pb","me","isLoaded","map","category","key","categoryId","categoryURL","routes","handleCardOnClick","slugify","getAllCategory","instance","API_PATH","response","data","getAllCategoryProduct","isMounted","useAppSelector","state","dispatch","useAppDispatch","categoriesProduct","setCategoriesProduct","categoryLoading","setCategoryLoading","fetchCategories","categoryService","is_success","storeCategories","fetchCategoriesProduct","fetchPrimaryCategoryBySlugifiedName","slugifiedName","find","fetchSecondaryCategoryBySlugifiedName","primarySlugifiedName","secondarySlugifiedName","primaryCategory","secondaryCategory","secondary_category","fetchTertiaryCategoryBySlugifiedName","tertiarySlugifiedName","tertiaryCategory","tertiary_category","useEffect","getProduct","getAllProducts","filter","params","getShopProducts","shopId","getProductReviews","products","product","fetchAllProducts","productService","storeProductPagination","fetchProduct","productId","fetchShopProducts","fetchProductReviews","title","titleDom","document","getElementById","innerHTML","slidesPerView","spaceBetween","loop","pagination","clickable","navigation","modules","Pagination","Navigation","className","content","index","Button","onReload","isError","onLoadMore","rowGap","columnGap","_after","flex","ProductCard","useProduct","setIsLoading","limit","sortBy","finally","useTitle","useCategory","maxW","CategoryScrollableContainer","XScrollableWrapper","styled"],"sourceRoot":""}
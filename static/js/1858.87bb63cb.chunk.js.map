{"version":3,"file":"static/js/1858.87bb63cb.chunk.js","mappings":"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","sources":["components/Card/ProductCard.tsx","components/Pagination/Pagination.tsx","pages/User/UserFavorite.tsx"],"sourcesContent":["import {\n  AspectRatio,\n  Box,\n  Center,\n  Divider,\n  Flex,\n  Image,\n  Text,\n} from \"@chakra-ui/react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Icon from \"../../assets/icons\";\nimport { IProductPayload } from \"../../interfaces/Product\";\nimport routes from \"../../routes/Routes\";\nimport { formatCurrency, handleImageOnError } from \"../../util/util\";\n\nconst ProductCard = ({ ...props }: IProductPayload) => {\n  const navigate = useNavigate();\n\n  return (\n    <Box\n      onClick={() => navigate(routes.PDP(props.id, props.name))}\n      flexShrink={0}\n      w={\"100%\"}\n      border={\"2px solid\"}\n      borderColor={\"light\"}\n      borderRadius={\"lg\"}\n      boxShadow={\"default\"}\n    >\n      <AspectRatio ratio={1} objectFit={\"cover\"} borderRadius={\"lg\"}>\n        <Image\n          src={props.product_photo?.url}\n          borderRadius={\"lg\"}\n          onError={handleImageOnError}\n        />\n      </AspectRatio>\n      <Flex p={3} direction={\"column\"}>\n        <Text\n          fontSize={{ base: \"md\", lg: \"lg\" }}\n          fontWeight={\"semibold\"}\n          textTransform={\"uppercase\"}\n          noOfLines={1}\n        >\n          {props.name}\n        </Text>\n        <Text\n          fontSize={{ base: \"lg\", lg: \"xl\" }}\n          fontWeight={\"bold\"}\n          color={\"primary\"}\n          mb={1}\n          noOfLines={1}\n          wordBreak={\"break-all\"}\n        >\n          Rp {formatCurrency(props.lowest_price!)}\n        </Text>\n        <Flex gap={2} alignItems={\"center\"} wrap={\"nowrap\"} mb={1}>\n          <Icon.Shop fill={\"primaryDarken\"} width={3.5} />\n          <Text\n            fontSize={\"xs\"}\n            fontWeight={\"semibold\"}\n            color={\"dark\"}\n            noOfLines={1}\n          >\n            {props.shop?.name}\n          </Text>\n        </Flex>\n        <Flex gap={2} alignItems={\"center\"} wrap={\"nowrap\"} mb={1}>\n          <Icon.Location fill={\"primaryDarken\"} width={3.5} />\n          <Text\n            fontSize={\"xs\"}\n            fontWeight={\"semibold\"}\n            color={\"dark\"}\n            noOfLines={1}\n          >\n            {props.shop?.location}\n          </Text>\n        </Flex>\n        <Flex gap={2} alignItems={\"center\"} mt={5}>\n          <Icon.Star fill={\"yellow.200\"} boxSize={{ base: 3, lg: 4 }} />\n          {props.rating! > 0 ? (\n            <Text\n              fontSize={{ base: \"xs\", lg: \"sm\" }}\n              fontWeight={\"semibold\"}\n              color={\"dark\"}\n            >\n              {props.rating}\n            </Text>\n          ) : (\n            <Text\n              fontSize={{ base: \"xs\", lg: \"sm\" }}\n              fontWeight={\"semibold\"}\n              color={\"dark\"}\n            >\n              -\n            </Text>\n          )}\n          {props.unit_sold! > 0 && (\n            <>\n              <Center height={{ base: \"10px\", lg: \"12px\" }}>\n                <Divider\n                  orientation=\"vertical\"\n                  borderWidth={1}\n                  borderColor={\"lightDarken\"}\n                />\n              </Center>\n              <Text\n                fontSize={{ base: \"xs\", lg: \"sm\" }}\n                fontWeight={\"semibold\"}\n                color={\"darkLighten\"}\n                noOfLines={1}\n              >\n                {props.unit_sold} sold\n              </Text>\n            </>\n          )}\n        </Flex>\n      </Flex>\n    </Box>\n  );\n};\n\nexport default ProductCard;\n","import { Button, Flex } from \"@chakra-ui/react\";\nimport React, { useEffect, useState } from \"react\";\nimport { IPaginationProps } from \"../../interfaces/Pagination\";\n\nconst Pagination = ({ ...props }: IPaginationProps) => {\n  const [pagination, setPagination] = useState<String[]>([]);\n\n  const handleClick = (page: number) => {\n    window.scrollTo(0, 0);\n    props.setPage(page);\n  };\n\n  const handlePagination = (totalPage: number, currentPage: number) => {\n    let element: string[] = [];\n    const actualPage = currentPage + 1;\n\n    if (totalPage <= 10) {\n      element = Array.from(Array(props.data.total_page).keys(), (index) =>\n        String(index + 1)\n      );\n    } else {\n      if (actualPage <= 4) {\n        element = [\"1\", \"2\", \"3\", \"...\", String(totalPage)];\n      } else if (actualPage < 6) {\n        element = [\n          \"1\",\n          \"...\",\n          String(actualPage - 2),\n          String(actualPage - 1),\n          String(actualPage),\n          \"...\",\n          String(totalPage),\n        ];\n      } else if (actualPage < totalPage && actualPage > 4) {\n        element = [\n          \"1\",\n          \"...\",\n          String(actualPage - 3),\n          String(actualPage - 2),\n          String(actualPage - 1),\n          \"...\",\n          String(totalPage),\n        ];\n      } else if (actualPage > totalPage - 4) {\n        element = [\n          \"1\",\n          \"...\",\n          String(totalPage - 2),\n          String(totalPage - 1),\n          String(totalPage),\n        ];\n      } else {\n        element = [\n          \"1\",\n          \"...\",\n          String(actualPage - 1),\n          String(actualPage),\n          String(actualPage + 1),\n          \"...\",\n          String(totalPage),\n        ];\n      }\n    }\n\n    setPagination(element);\n  };\n\n  useEffect(() => {\n    handlePagination(props.data.total_page, props.data.current_page);\n  }, [props.data]);\n\n  return (\n    <Flex justifyContent={\"center\"} gap={5} py={8}>\n      <Button\n        variant={\"unstyled\"}\n        borderRadius={\"none\"}\n        fontWeight={\"normal\"}\n        size={{\n          base: \"md\",\n          sm: \"lg\",\n          md: \"lg\",\n          lg: \"lg\",\n          xl: \"lg\",\n        }}\n        onClick={() => {\n          if (props.data.current_page - 1 > 0) {\n            handleClick(props.data.current_page - 1);\n          }\n        }}\n      >\n        Prev\n      </Button>\n      {pagination.map((item, index) => (\n        <Button\n          key={index}\n          variant={\"unstyled\"}\n          borderRadius={\"none\"}\n          fontWeight={\n            props.data.current_page === Number(item) ? \"bold\" : \"normal\"\n          }\n          borderBottom={props.data.current_page === Number(item) ? \"1px\" : \"\"}\n          borderColor={\"primary\"}\n          size={{\n            md: \"lg\",\n            lg: \"lg\",\n            xl: \"lg\",\n          }}\n          display={{\n            base: \"none\",\n            sm: \"none\",\n            md: \"inline\",\n            lg: \"inline\",\n            xl: \"inline\",\n          }}\n          onClick={() => {\n            if (item !== \"...\") {\n              handleClick(Number(item));\n            }\n          }}\n        >\n          {item}\n        </Button>\n      ))}\n      <Button\n        variant={\"unstyled\"}\n        borderRadius={\"none\"}\n        fontWeight={\"normal\"}\n        size={{\n          base: \"md\",\n          sm: \"lg\",\n          md: \"lg\",\n          lg: \"lg\",\n          xl: \"lg\",\n        }}\n        onClick={() => {\n          if (props.data.current_page + 1 <= props.data.total_page) {\n            handleClick(props.data.current_page + 1);\n          }\n        }}\n      >\n        Next\n      </Button>\n    </Flex>\n  );\n};\n\nexport default Pagination;\n","import { Container, Flex, Box, Heading, Skeleton } from \"@chakra-ui/react\";\nimport ProductCard from \"../../components/Card/ProductCard\";\nimport { useEffect, useState } from \"react\";\nimport Pagination from \"../../components/Pagination/Pagination\";\nimport useUser from \"../../hooks/useUser\";\nimport { IProductPayload } from \"../../interfaces/Product\";\n\nfunction UserFavorite() {\n  const { fetchUserFavouriteProduct } = useUser();\n  const [isLoading, setIsLoading] = useState(true);\n  const [page, setPage] = useState(1);\n\n  const [totalPage, setTotalPage] = useState(1);\n  const [products, setProduct] = useState<IProductPayload[]>([]);\n\n  const updateProduct = async () => {\n    const response = await fetchUserFavouriteProduct({ page: page });\n    setIsLoading(true);\n\n    if (response.is_success) {\n      setProduct(response.data.data);\n      setTotalPage(response.data.total_page);\n    }\n\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    updateProduct();\n  }, [page]);\n\n  return (\n    <Container maxW=\"container.xl\">\n      <Box\n        py={{\n          base: \"1em\",\n          sm: \"1.5em\",\n          md: \"2em\",\n          lg: \"2.5em\",\n          xl: \"4em\",\n        }}\n      >\n        <Flex direction=\"column\" width=\"100%\">\n          <Heading\n            size={{\n              base: \"md\",\n              sm: \"lg\",\n            }}\n          >\n            My Favourites\n          </Heading>\n          <Skeleton isLoaded={!isLoading} borderRadius={\"lg\"}>\n            <Flex\n              wrap={\"wrap\"}\n              direction={\"row\"}\n              justifyContent={products.length <= 5 ? \"start\" : \"space-between\"}\n              rowGap={{ base: 1, sm: 3, lg: 2 }}\n              columnGap={{ base: 1, sm: 2, lg: 1 }}\n              _after={{\n                md: { content: '\"\"', flex: \"auto\" },\n                lg: { content: \"none\" },\n              }}\n            >\n              {products.length !== 0 &&\n                products.map((product) => (\n                  <ProductCard key={product.id} {...product} />\n                ))}\n            </Flex>\n            <Pagination\n              data={{\n                total_page: totalPage,\n                current_page: page,\n              }}\n              setPage={setPage}\n            />\n          </Skeleton>\n        </Flex>\n      </Box>\n    </Container>\n  );\n}\n\nexport default UserFavorite;\n"],"names":["props","navigate","useNavigate","onClick","routes","id","name","flexShrink","w","border","borderColor","borderRadius","boxShadow","ratio","objectFit","src","product_photo","url","onError","handleImageOnError","p","direction","fontSize","base","lg","fontWeight","textTransform","noOfLines","color","mb","wordBreak","formatCurrency","lowest_price","gap","alignItems","wrap","fill","width","shop","location","mt","boxSize","rating","unit_sold","height","orientation","borderWidth","useState","pagination","setPagination","handleClick","page","window","scrollTo","setPage","useEffect","totalPage","currentPage","element","actualPage","Array","from","data","total_page","keys","index","String","handlePagination","current_page","justifyContent","py","variant","size","sm","md","xl","map","item","Number","borderBottom","display","fetchUserFavouriteProduct","useUser","isLoading","setIsLoading","setTotalPage","products","setProduct","updateProduct","response","is_success","maxW","isLoaded","length","rowGap","columnGap","_after","content","flex","product"],"sourceRoot":""}
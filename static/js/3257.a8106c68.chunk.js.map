{"version":3,"file":"static/js/3257.a8106c68.chunk.js","mappings":"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","sources":["pages/Seller/Product/AddProductForm.tsx"],"sourcesContent":["import {\n  Box,\n  Text,\n  Flex,\n  Heading,\n  Button,\n  Input,\n  Textarea,\n  VStack,\n  InputGroup,\n  InputLeftAddon,\n  RadioGroup,\n  Stack,\n  Radio,\n  Select,\n  InputRightAddon,\n  Image,\n  Wrap,\n  WrapItem,\n  useDisclosure,\n  IconButton,\n} from \"@chakra-ui/react\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Icon from \"../../../assets/icons\";\nimport CreateProductVariationForm from \"../../../components/Form/CreateProductVariationForm\";\nimport FileInputBtn from \"../../../components/Input/FileInputBtn\";\nimport SelectCategoryModal from \"../../../components/Modal/SelectCategoryModal\";\nimport useCategory from \"../../../hooks/useCategory\";\nimport useShop from \"../../../hooks/useShop\";\nimport useToast from \"../../../hooks/useToast\";\nimport useUser from \"../../../hooks/useUser\";\nimport { IStateSelectedCategory } from \"../../../interfaces/Components\";\nimport {\n  ICreateProductPhotoPayload,\n  ICreateProductShopPayload,\n  ICreateProductVTPayload,\n} from \"../../../interfaces/Product\";\nimport { IProductUploadPhotoPayload } from \"../../../interfaces/Shop\";\nimport {\n  ICreateVariantGroup,\n  ICreateVariantType,\n} from \"../../../interfaces/Variant\";\nimport routes from \"../../../routes/Routes\";\nimport \"./style.css\";\n\nfunction AddProductForm() {\n  const [imgList, setImgList] = useState<File[]>([]);\n  const [selectedCat, setSelectedCat] = useState<IStateSelectedCategory>({\n    primaryCat: undefined,\n    secondaryCat: undefined,\n    tertiaryCat: undefined,\n  });\n  const [variation, setVariation] = useState<boolean>(false);\n  const [vgInput, setVgInput] = useState<ICreateVariantGroup[]>([]);\n  const [vtList, setVtList] = useState<ICreateVariantType[]>([]);\n  const [formInput, setFormInput] = useState({\n    productName: \"\",\n    productDescription: \"\",\n    defaultPrice: \"\",\n    defaultStock: \"\",\n    weight: \"\",\n    dangerousGoods: \"false\",\n    condition: \"New\",\n    SKU: \"\",\n    minQty: \"\",\n    maxQty: \"\",\n  });\n  const [disableBtn, setDisableBtn] = useState(false);\n\n  const { categories } = useCategory();\n  const { user } = useUser();\n  const { uploadProductPhoto, createShopProduct } = useShop();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const navigate = useNavigate();\n  const { successToast, errorToast } = useToast();\n\n  useEffect(() => {}, [imgList, vtList, vgInput, formInput, selectedCat]);\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFormInput({\n      ...formInput,\n      [e.currentTarget.id]: e.currentTarget.value,\n    });\n  };\n\n  const submitForm = async () => {\n    setDisableBtn(true);\n    try {\n      var productPayload: ICreateProductShopPayload = {\n        name: \"\",\n        description: \"\",\n        primary_category_id: 0,\n        secondary_category_id: 0,\n        tertiary_category_id: 0,\n        is_hazardous: false,\n        weight: 0,\n        internal_sku: \"\",\n        condition: \"\",\n        min_buy_qty: 0,\n        shop_id: 0,\n        photos: [],\n        variant_group: {\n          name: \"\",\n          variant_type: [],\n        },\n      };\n\n      if (!user?.shop_id) {\n        throw new Error(\"Seller shop_id missing\");\n      }\n      productPayload.shop_id = user?.shop_id;\n\n      if (\n        !selectedCat.primaryCat ||\n        !selectedCat.secondaryCat ||\n        !selectedCat.tertiaryCat\n      ) {\n        throw new Error(\"Please select a category\");\n      }\n\n      productPayload.primary_category_id = selectedCat.primaryCat.id;\n      productPayload.secondary_category_id = selectedCat.secondaryCat.id;\n      productPayload.tertiary_category_id = selectedCat.tertiaryCat.id;\n\n      if (imgList.length === 0) {\n        throw new Error(\"Please upload at least one product image\");\n      }\n\n      if (!variation) {\n        if (\n          Number(formInput.defaultPrice) <= 0 ||\n          Number(formInput.defaultStock) <= 0\n        ) {\n          throw new Error(\"Missing fields price or stock for product\");\n        }\n\n        productPayload.variant_group.name = \"DEFAULT\";\n\n        const variantType: ICreateProductVTPayload = {\n          name: \"DEFAULT\",\n          stock: Number(formInput.defaultStock),\n          price: Number(formInput.defaultPrice),\n        };\n        productPayload.variant_group.variant_type = [variantType];\n      } else {\n        if (vtList.length === 0) {\n          throw new Error(\"Missing variant type\");\n        }\n\n        if (vgInput[0].vg_name === \"\") {\n          throw new Error(\"Variant 1 name must not be empty\");\n        }\n\n        if (vgInput.length === 1) {\n          productPayload.variant_group.name = vgInput[0].vg_name;\n\n          vtList.forEach((row) => {\n            if (row.vtOne_name === \"\") {\n              throw new Error(\"Variant type must not be empty\");\n            }\n\n            var vtPayload: ICreateProductVTPayload = {\n              name: row.vtOne_name,\n              price: Number(row.price),\n              stock: Number(row.stock),\n            };\n\n            productPayload.variant_group.variant_type = [\n              ...productPayload.variant_group.variant_type,\n              vtPayload,\n            ];\n            return;\n          });\n        } else {\n          if (vgInput[1].vg_name === \"\") {\n            throw new Error(\"Variant 2 name must not be empty\");\n          }\n          productPayload.variant_group.name =\n            vgInput[0].vg_name + \",\" + vgInput[1].vg_name;\n\n          vtList.forEach((row) => {\n            if (row.vtOne_name === \"\" || row.vtTwo_name === \"\") {\n              throw new Error(\"Variant type must not be empty\");\n            }\n\n            var vtPayload: ICreateProductVTPayload = {\n              name: row.vtOne_name + \",\" + row.vtTwo_name,\n              price: Number(row.price),\n              stock: Number(row.stock),\n            };\n\n            productPayload.variant_group.variant_type = [\n              ...productPayload.variant_group.variant_type,\n              vtPayload,\n            ];\n            return;\n          });\n        }\n      }\n\n      if (formInput.productName === \"\") {\n        throw new Error(\"Missing field name\");\n      }\n      productPayload.name = formInput.productName;\n\n      if (formInput.productDescription === \"\") {\n        throw new Error(\"Missing field description\");\n      }\n      productPayload.description = formInput.productDescription;\n\n      if (formInput.weight === \"\" || Number(formInput.weight) <= 0) {\n        throw new Error(\"Missing or invalid weight field\");\n      }\n      productPayload.weight = Number(formInput.weight);\n\n      if (formInput.minQty === \"\" || Number(formInput.minQty) < 1) {\n        throw new Error(\"Missing minimum qty, or must be greater than 0.\");\n      }\n      productPayload.min_buy_qty = Number(formInput.minQty);\n\n      if (formInput.maxQty !== \"\" && !(Number(formInput.maxQty) < 1)) {\n        productPayload.max_buy_qty = Number(formInput.maxQty);\n      }\n\n      productPayload.condition = formInput.condition;\n      productPayload.is_hazardous = JSON.parse(formInput.dangerousGoods);\n      productPayload.internal_sku = formInput.SKU;\n\n      const photoList: IProductUploadPhotoPayload = {\n        photos: imgList,\n      };\n\n      const photoRes = await uploadProductPhoto(photoList);\n      if (!photoRes.is_success) {\n        throw new Error(photoRes.message);\n      }\n\n      photoRes.data.urls.forEach((cloudUrl) => {\n        const cloudinaryUrl: ICreateProductPhotoPayload = {\n          url: cloudUrl,\n        };\n\n        productPayload.photos = [...productPayload.photos, cloudinaryUrl];\n        return;\n      });\n\n      const response = await createShopProduct(productPayload);\n      if (!response.is_success) {\n        throw new Error(response.message);\n      }\n\n      successToast(\"Product successfully created\");\n      setDisableBtn(false);\n      navigate(routes.SELLER_PRODUCT);\n    } catch (e: any) {\n      errorToast(e.message);\n      window.scrollTo(0, 0);\n      setDisableBtn(false);\n    }\n  };\n\n  return (\n    <Box width=\"100%\">\n      <Flex flexDirection={\"column\"} p={8} backgroundColor={\"whiteAlpha.800\"}>\n        <Heading mb={8} noOfLines={1}>\n          Basic Information\n        </Heading>\n        <VStack justifyContent={\"center\"} alignItems={\"center\"} spacing={8}>\n          <Flex flexDirection={\"row\"} width=\"70%\">\n            <Flex width=\"30%\">\n              <Text textColor={\"tomato\"}>*</Text>\n              <Text>Product Images</Text>\n            </Flex>\n            <Wrap width=\"70%\">\n              {imgList.map((file, index) => {\n                return (\n                  <WrapItem key={index} className=\"imgContainer\">\n                    <Image\n                      src={URL.createObjectURL(file)}\n                      width=\"120px\"\n                      height=\"120px\"\n                    />\n                    <IconButton\n                      className=\"deleteImgBtn\"\n                      icon={<Icon.Trash />}\n                      variant=\"solid\"\n                      colorScheme=\"orange\"\n                      aria-label={\"Delete Image\"}\n                      onClick={() => {\n                        setImgList(\n                          imgList.filter((_, idx) => {\n                            return idx !== index;\n                          })\n                        );\n                      }}\n                    />\n                  </WrapItem>\n                );\n              })}\n              <WrapItem>\n                <FileInputBtn imgList={imgList} setImgList={setImgList} />\n              </WrapItem>\n            </Wrap>\n          </Flex>\n          <Flex\n            flexDirection={\"row\"}\n            justifyContent={\"space-between\"}\n            width=\"70%\"\n          >\n            <Flex>\n              <Text textColor={\"tomato\"}>*</Text>\n              <Text>Product Name</Text>\n            </Flex>\n            <Input\n              id=\"productName\"\n              placeholder=\"Enter product name\"\n              width={\"70%\"}\n              value={formInput.productName}\n              onChange={handleInputChange}\n            />\n          </Flex>\n          <Flex\n            flexDirection={\"row\"}\n            justifyContent={\"space-between\"}\n            width=\"70%\"\n          >\n            <Flex>\n              <Text textColor={\"tomato\"}>*</Text>\n              <Text>Category</Text>\n            </Flex>\n            <Button width=\"70%\" onClick={onOpen} justifyContent=\"space-between\">\n              <Text>\n                {selectedCat.primaryCat?.name &&\n                selectedCat.secondaryCat?.name &&\n                selectedCat.tertiaryCat?.name\n                  ? selectedCat.primaryCat.name +\n                    \" > \" +\n                    selectedCat.secondaryCat.name +\n                    \" > \" +\n                    selectedCat.tertiaryCat.name\n                  : \"Set Category\"}\n              </Text>\n              <Icon.Pencil />\n            </Button>\n          </Flex>\n          <Flex\n            flexDirection={\"row\"}\n            justifyContent={\"space-between\"}\n            width=\"70%\"\n          >\n            <Flex>\n              <Text textColor={\"tomato\"}>*</Text>\n              <Text>Product Description</Text>\n            </Flex>\n            <Textarea\n              id=\"productDescription\"\n              placeholder=\"Here is a sample placeholder\"\n              size=\"sm\"\n              resize={\"vertical\"}\n              maxHeight=\"18rem\"\n              width={\"70%\"}\n              value={formInput.productDescription}\n              onChange={(e) =>\n                setFormInput({\n                  ...formInput,\n                  productDescription: e.currentTarget.value,\n                })\n              }\n            />\n          </Flex>\n        </VStack>\n      </Flex>\n      <Flex\n        flexDirection={\"column\"}\n        p={8}\n        my={8}\n        backgroundColor={\"whiteAlpha.800\"}\n      >\n        <Heading mb={8} noOfLines={1}>\n          Sales Information\n        </Heading>\n        <VStack justifyContent={\"center\"} alignItems={\"center\"} spacing={8}>\n          {!variation ? (\n            <>\n              <Flex\n                flexDirection={\"row\"}\n                justifyContent={\"space-between\"}\n                width=\"70%\"\n              >\n                <Text>Variations</Text>\n                <Button\n                  width=\"70%\"\n                  variant=\"outline\"\n                  onClick={() => setVariation(true)}\n                >\n                  + Enable Variations\n                </Button>\n              </Flex>\n              <Flex\n                flexDirection={\"row\"}\n                justifyContent={\"space-between\"}\n                width=\"70%\"\n              >\n                <Flex>\n                  <Text textColor={\"tomato\"}>*</Text>\n                  <Text>Price</Text>\n                </Flex>\n                <InputGroup width=\"70%\">\n                  <InputLeftAddon children=\"Rp\" />\n                  <Input\n                    id=\"defaultPrice\"\n                    min={0}\n                    width=\"100%\"\n                    type=\"number\"\n                    placeholder=\"Input\"\n                    value={formInput.defaultPrice}\n                    onChange={handleInputChange}\n                  />\n                </InputGroup>\n              </Flex>\n              <Flex\n                flexDirection={\"row\"}\n                justifyContent={\"space-between\"}\n                width=\"70%\"\n              >\n                <Flex>\n                  <Text textColor={\"tomato\"}>*</Text>\n                  <Text>Stock</Text>\n                </Flex>\n                <Input\n                  id=\"defaultStock\"\n                  min={0}\n                  width=\"70%\"\n                  type=\"number\"\n                  placeholder=\"Input\"\n                  value={formInput.defaultStock}\n                  onChange={handleInputChange}\n                />\n              </Flex>\n            </>\n          ) : (\n            <CreateProductVariationForm\n              setVariation={setVariation}\n              vgInput={vgInput}\n              setVgInput={setVgInput}\n              vtList={vtList}\n              setVtList={setVtList}\n            />\n          )}\n          <Flex\n            flexDirection={\"row\"}\n            justifyContent={\"space-between\"}\n            width=\"70%\"\n          >\n            <Flex>\n              <Text textColor={\"tomato\"}>*</Text>\n              <Text>Minimum Buy Qty</Text>\n            </Flex>\n            <Input\n              id=\"minQty\"\n              width={\"70%\"}\n              type=\"number\"\n              min={1}\n              placeholder=\"Input\"\n              value={formInput.minQty}\n              onChange={handleInputChange}\n            />\n          </Flex>\n          <Flex\n            flexDirection={\"row\"}\n            justifyContent={\"space-between\"}\n            width=\"70%\"\n          >\n            <Flex>\n              <Text>Maximum Buy Qty</Text>\n            </Flex>\n            <Input\n              id=\"maxQty\"\n              width={\"70%\"}\n              type=\"number\"\n              min={1}\n              placeholder=\"Input\"\n              value={formInput.maxQty}\n              onChange={handleInputChange}\n            />\n          </Flex>\n        </VStack>\n      </Flex>\n      <Flex\n        flexDirection={\"column\"}\n        p={8}\n        my={8}\n        backgroundColor={\"whiteAlpha.800\"}\n      >\n        <Heading mb={8} noOfLines={1}>\n          Shipping\n        </Heading>\n        <VStack justifyContent={\"center\"} alignItems={\"center\"} spacing={8}>\n          <Flex\n            flexDirection={\"row\"}\n            justifyContent={\"space-between\"}\n            width=\"70%\"\n          >\n            <Flex>\n              <Text textColor={\"tomato\"}>*</Text>\n              <Text>Weight</Text>\n            </Flex>\n            <InputGroup width=\"70%\">\n              <Input\n                id=\"weight\"\n                min={0}\n                width=\"100%\"\n                placeholder=\"Input\"\n                type=\"number\"\n                value={formInput.weight}\n                onChange={handleInputChange}\n              />\n              <InputRightAddon children=\"gr\" />\n            </InputGroup>\n          </Flex>\n          <Flex\n            flexDirection={\"row\"}\n            justifyContent={\"space-between\"}\n            width=\"70%\"\n          >\n            <Text>Dangerous Goods</Text>\n            <RadioGroup\n              width=\"70%\"\n              value={formInput.dangerousGoods}\n              onChange={(val) =>\n                setFormInput({\n                  ...formInput,\n                  dangerousGoods: val,\n                })\n              }\n            >\n              <Stack direction=\"row\" spacing={10} width=\"100%\">\n                <Radio value=\"false\">No</Radio>\n                <Radio value=\"true\">\n                  Contains battery, magnet, liquid, or flammable materials\n                </Radio>\n              </Stack>\n            </RadioGroup>\n          </Flex>\n        </VStack>\n      </Flex>\n      <Flex\n        flexDirection={\"column\"}\n        p={8}\n        my={8}\n        backgroundColor={\"whiteAlpha.800\"}\n      >\n        <Heading mb={8} noOfLines={1}>\n          Others\n        </Heading>\n        <VStack justifyContent={\"center\"} alignItems={\"center\"} spacing={8}>\n          <Flex\n            flexDirection={\"row\"}\n            justifyContent={\"space-between\"}\n            width=\"70%\"\n          >\n            <Text>Condition</Text>\n            <Select\n              width=\"70%\"\n              value={formInput.condition}\n              onChange={(e) =>\n                setFormInput({\n                  ...formInput,\n                  condition: e.currentTarget.value,\n                })\n              }\n            >\n              <option value=\"New\">New</option>\n              <option value=\"Used\">Used</option>\n            </Select>\n          </Flex>\n          <Flex\n            flexDirection={\"row\"}\n            justifyContent={\"space-between\"}\n            width=\"70%\"\n          >\n            <Text>SKU</Text>\n            <Input\n              id=\"SKU\"\n              placeholder=\"Input\"\n              width={\"70%\"}\n              value={formInput.SKU}\n              onChange={handleInputChange}\n            />\n          </Flex>\n        </VStack>\n      </Flex>\n      <Flex flexDirection={\"row-reverse\"} p={8} my={8} gap={4}>\n        <Button\n          width={\"11em\"}\n          variant=\"solid\"\n          colorScheme={\"green\"}\n          onClick={submitForm}\n          disabled={disableBtn}\n        >\n          Save and Publish\n        </Button>\n        <Button\n          width={\"11em\"}\n          variant=\"outline\"\n          bgColor={\"white\"}\n          onClick={() => navigate(routes.SELLER_PRODUCT)}\n          disabled={disableBtn}\n        >\n          Cancel\n        </Button>\n      </Flex>\n      <SelectCategoryModal\n        isOpen={isOpen}\n        onClose={onClose}\n        categories={categories}\n        selectedCategory={selectedCat}\n        setSelectedCategory={setSelectedCat}\n      />\n    </Box>\n  );\n}\n\nexport default AddProductForm;\n"],"names":["useState","imgList","setImgList","primaryCat","undefined","secondaryCat","tertiaryCat","selectedCat","setSelectedCat","variation","setVariation","vgInput","setVgInput","vtList","setVtList","productName","productDescription","defaultPrice","defaultStock","weight","dangerousGoods","condition","SKU","minQty","maxQty","formInput","setFormInput","disableBtn","setDisableBtn","categories","useCategory","user","useUser","useShop","uploadProductPhoto","createShopProduct","useDisclosure","isOpen","onOpen","onClose","navigate","useNavigate","useToast","successToast","errorToast","useEffect","handleInputChange","e","currentTarget","id","value","submitForm","productPayload","name","description","primary_category_id","secondary_category_id","tertiary_category_id","is_hazardous","internal_sku","min_buy_qty","shop_id","photos","variant_group","variant_type","Error","length","Number","variantType","stock","price","vg_name","forEach","row","vtOne_name","vtPayload","vtTwo_name","max_buy_qty","JSON","parse","photoList","photoRes","is_success","message","data","urls","cloudUrl","cloudinaryUrl","url","response","routes","window","scrollTo","width","flexDirection","p","backgroundColor","mb","noOfLines","justifyContent","alignItems","spacing","textColor","map","file","index","className","src","URL","createObjectURL","height","icon","variant","colorScheme","onClick","filter","_","idx","placeholder","onChange","size","resize","maxHeight","my","children","min","type","val","direction","gap","disabled","bgColor","selectedCategory","setSelectedCategory"],"sourceRoot":""}
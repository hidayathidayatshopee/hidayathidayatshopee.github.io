{"version":3,"file":"static/js/3570.df881e26.chunk.js","mappings":"sMAwHA,IAzGoB,SAAH,GAAuC,IAAD,MAA7BA,EAAK,iCACvBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,UAAC,KAAG,CACFC,QAAS,kBAAMF,EAASG,EAAAA,EAAAA,IAAWJ,EAAMK,GAAIL,EAAMM,MAAM,EACzDC,WAAY,EACZC,EAAG,OACHC,OAAQ,YACRC,YAAa,QACbC,aAAc,KACdC,UAAW,UAAU,WAErB,SAAC,KAAW,CAACC,MAAO,EAAGC,UAAW,QAASH,aAAc,KAAK,UAC5D,SAAC,KAAK,CACJI,IAAwB,QAArB,EAAEf,EAAMgB,qBAAa,aAAnB,EAAqBC,IAC1BN,aAAc,KACdO,QAASC,EAAAA,QAGb,UAAC,KAAI,CAACC,EAAG,EAAGC,UAAW,SAAS,WAC9B,SAAC,KAAI,CACHC,SAAU,CAAEC,KAAM,KAAMC,GAAI,MAC5BC,WAAY,WACZC,cAAe,YACfC,UAAW,EAAE,SAEZ3B,EAAMM,QAET,UAAC,KAAI,CACHgB,SAAU,CAAEC,KAAM,KAAMC,GAAI,MAC5BC,WAAY,OACZG,MAAO,UACPC,GAAI,EACJF,UAAW,EACXG,UAAW,YAAY,iBAEnBC,EAAAA,EAAAA,IAAe/B,EAAMgC,kBAE3B,UAAC,KAAI,CAACC,IAAK,EAAGC,WAAY,SAAUC,KAAM,SAAUN,GAAI,EAAE,WACxD,SAAC,SAAS,CAACO,KAAM,gBAAiBC,MAAO,OACzC,SAAC,KAAI,CACHf,SAAU,KACVG,WAAY,WACZG,MAAO,OACPD,UAAW,EAAE,SAEF,QAFE,EAEZ3B,EAAMsC,YAAI,aAAV,EAAYhC,WAGjB,UAAC,KAAI,CAAC2B,IAAK,EAAGC,WAAY,SAAUC,KAAM,SAAUN,GAAI,EAAE,WACxD,SAAC,aAAa,CAACO,KAAM,gBAAiBC,MAAO,OAC7C,SAAC,KAAI,CACHf,SAAU,KACVG,WAAY,WACZG,MAAO,OACPD,UAAW,EAAE,SAEF,QAFE,EAEZ3B,EAAMsC,YAAI,aAAV,EAAYC,eAGjB,UAAC,KAAI,CAACN,IAAK,EAAGC,WAAY,SAAUM,GAAI,EAAE,WACxC,SAAC,SAAS,CAACJ,KAAM,aAAcK,QAAS,CAAElB,KAAM,EAAGC,GAAI,KACtDxB,EAAM0C,OAAU,GACf,SAAC,KAAI,CACHpB,SAAU,CAAEC,KAAM,KAAMC,GAAI,MAC5BC,WAAY,WACZG,MAAO,OAAO,SAEb5B,EAAM0C,UAGT,SAAC,KAAI,CACHpB,SAAU,CAAEC,KAAM,KAAMC,GAAI,MAC5BC,WAAY,WACZG,MAAO,OAAO,eAKjB5B,EAAM2C,UAAa,IAClB,iCACE,SAAC,KAAM,CAACC,OAAQ,CAAErB,KAAM,OAAQC,GAAI,QAAS,UAC3C,SAAC,KAAO,CACNqB,YAAY,WACZC,YAAa,EACbpC,YAAa,mBAGjB,UAAC,KAAI,CACHY,SAAU,CAAEC,KAAM,KAAMC,GAAI,MAC5BC,WAAY,WACZG,MAAO,cACPD,UAAW,EAAE,UAEZ3B,EAAM2C,UAAS,sBAQhC,C,wMCpEA,EA9CqB,SAAH,GAA0C,IAAjC3C,EAAK,iCAC9B,OACE,UAAC,KAAI,CACH+C,KAAK,SACL5C,QAASH,EAAMG,QACfkB,UAAW,CAAEE,KAAM,MAAOC,GAAI,UAC9BjB,WAAY,EACZC,EAAG,CACDe,KAAM,QACNC,GAAI,SAENwB,EAAG,CACDzB,KAAM,OACNC,GAAI,QAENf,OAAQ,YACRC,YAAa,QACbC,aAAc,KACdC,UAAW,UAAU,WAErB,SAAC,KAAW,CACVC,MAAO,EACPN,WAAY,EACZ8B,MAAO,CAAEd,KAAM,MAAOC,GAAI,QAC1BoB,OAAQ,CAAErB,KAAM,OAAQC,GAAI,QAC5Bb,aAAc,KAAK,UAEnB,SAAC,KAAK,CACJI,IAAKf,EAAMiD,KACXtC,aAAc,KACdO,QAASC,EAAAA,QAGb,SAAC,KAAI,CACH+B,MAAO,SACPC,QAAS,mBACTC,GAAI,EACJC,GAAI,EACJ1B,UAAW,CAAEJ,KAAM,EAAGC,GAAI,GAAI,SAE7BxB,EAAMM,SAIf,E,WC0DA,MAxFA,SAAqCN,GACnC,IACEsD,EAOEtD,EAPFsD,MACAC,EAMEvD,EANFuD,cACAC,EAKExD,EALFwD,WACAC,EAIEzD,EAJFyD,WACAC,EAGE1D,EAHF0D,aACAC,EAEE3D,EAFF2D,UACAzC,EACElB,EADFkB,QAEIjB,GAAWC,EAAAA,EAAAA,MA2BjB,OACE,8BACyB,IAAtBsD,EAAWI,SACV,UAAC,KAAI,CAACvC,UAAW,SAAUgC,GAAI,EAAE,WAC/B,SAAC,KAAI,CAACQ,eAAgB,gBAAgB,UACpC,SAAC,KAAO,CACNV,QAAS,iBACT7B,SAAU,CAAEC,KAAM,KAAMuC,GAAI,KAAMC,GAAI,OAAQ,SAExC,OAALT,QAAK,IAALA,EAAAA,EAAS,eAGbpC,GACC,SAAC,KAAG,CAAC8C,QAAS,eAAgBC,GAAI,GAAItD,aAAc,KAAK,UACvD,SAAC,KAAM,WACL,UAAC,KAAM,YACL,SAAC,KAAI,wCACL,UAAC,KAAI,CACHuD,GAAIC,EAAAA,GACJC,KAAM,IACNjB,QAAS,OACTjB,WAAY,SACZZ,SAAU,KAAK,WAEf,SAAC,YAAY,CAACe,MAAO,EAAGgC,GAAI,MAAOC,GAAI,IAAK,qBAOpD,SAAC,KAAQ,CAACC,UAAWZ,EAAWhD,aAAc,KAAK,UACjD,SAAC,IAAkB,CAAC6D,eAAa,WAC9BhB,EAAWiB,KAAI,SAACC,GAAQ,OACvB,mBAAC,GAAY,kBACPA,GAAQ,IACZC,IAAKD,EAASrE,GACdF,QAAS,kBA9DD,SAACyE,EAAoBC,GAC7C,OAAQtB,GACN,IAAK,UAEH,YADAtD,EAASG,EAAAA,EAAAA,iBAAwByE,IAEnC,IAAK,YAIH,YAHA5E,EACEG,EAAAA,EAAAA,mBAA0BqD,EAAaoB,EAAaD,IAGxD,IAAK,WASH,YARA3E,EACEG,EAAAA,EAAAA,kBACEqD,EACAC,EACAmB,EACAD,IAIN,QACE,OAEN,CAwCoBE,CAAkBJ,EAASrE,GAAI0E,IAAQL,EAASpE,MAAM,IAExD,YASpB,C,uIC7EA,MAvBA,SAAwBN,GACtB,IAAQkB,EAAYlB,EAAZkB,QAER,OACE,SAAC,KAAG,CAAC8C,QAAS,eAAgBC,GAAI,GAAItD,aAAc,KAAK,UACvD,SAAC,KAAM,WACL,UAAC,KAAM,YACL,SAAC,KAAI,wCACL,UAAC,KAAI,CACHuD,GAAIc,EAAAA,GACJ7E,QAAS,kBAAMe,GAAWA,GAAS,EACnCgB,WAAY,SACZZ,SAAU,KAAK,WAEf,SAAC,YAAY,CAACe,MAAO,EAAGgC,GAAI,MAAOC,GAAI,IAAK,mBAOxD,ECEA,MAvBA,SAA4BtE,GAC1B,IAAQiF,EAAajF,EAAbiF,SAER,OACE,SAAC,KAAG,CAACjB,QAAS,eAAgBC,GAAI,GAAItD,aAAc,KAAK,UACvD,SAAC,KAAM,WACL,UAAC,KAAM,YACL,SAAC,KAAI,uCACL,UAAC,KAAI,CACHuD,GAAIc,EAAAA,GACJ7E,QAAS,kBAAM8E,GAAYA,GAAU,EACrC/C,WAAY,SACZZ,SAAU,KAAK,WAEf,SAAC,YAAY,CAACe,MAAO,EAAGgC,GAAI,MAAOC,GAAI,IAAK,mBAOxD,ECyDA,MAlEA,SAA0BtE,GACxB,IACEkF,EASElF,EATFkF,SACA5B,EAQEtD,EARFsD,MACAK,EAOE3D,EAPF2D,UACAwB,EAMEnF,EANFmF,QACAjE,EAKElB,EALFkB,QACAkE,EAIEpF,EAJFoF,cACAC,EAGErF,EAHFqF,WACAC,EAEEtF,EAFFsF,aACAC,EACEvF,EADFuF,UAEF,OACE,UAAC,KAAI,CAAClE,UAAW,CAAEE,KAAM,SAAUC,GAAI,UAAY6B,GAAI,GAAG,WACxD,UAAC,KAAI,CAACQ,eAAgB,gBAAgB,WACpC,SAAC,KAAO,CACNV,QAAS,iBACT7B,SAAU,CAAEC,KAAM,KAAMuC,GAAI,KAAMC,GAAI,OAAQ,SAE7CT,IAEFiC,IACC,SAAC,KAAM,CAACrD,WAAY,SAAS,UAC3B,UAAC,KAAI,CAACiB,QAAS,OAAQhD,QAASoF,EAAU,UAC3B,OAAZD,QAAY,IAAZA,EAAAA,EAAgB,YACjB,SAAC,iBAAiB,CAACjD,MAAO,EAAGgC,GAAI,gBAKxCc,GACC,SAAC,EAAc,CAACjE,QAASA,KAEzB,8BACuB,IAApBgE,EAAStB,QACR,SAAC,EAAkB,CAACqB,SAAU/D,KAE9B,UAAC,KAAQ,CAACqD,UAAWZ,EAAWhD,aAAc,KAAK,WACjD,SAAC,KAAI,CACH6E,gBAAiB,CACfjE,KAAM,iBACNwC,GAAI,iBACJvC,GAAI,kBAENS,IAAK,EAAE,SAEc,IAApBiD,EAAStB,QACRsB,EAAST,KAAI,SAACgB,GAAO,OACnB,SAACC,EAAA,GAAW,UAAsBD,GAAhBA,EAAQpF,GAAmB,MAGlDgF,IACC,SAAC,KAAM,CAAC7C,GAAI,EAAE,UACZ,SAAC,KAAM,CAACW,QAAS,UAAWhD,QAAS,kBAAMkF,GAAY,EAAC,SACxC,OAAbD,QAAa,IAAbA,EAAAA,EAAiB,8BAUtC,C,uCCtEA,IARiB,WAAqB,IAApBO,EAAK,uDAAG,OAClBC,EAAWC,SAASC,eAAe,UAEzCC,EAAAA,EAAAA,YAAU,WACRH,EAASI,UAAYL,CACvB,GAAG,CAACA,GACN,C,4JCiCA,MAhCA,SAAsB3F,GACpB,OACE,SAAC,KAAM,CACLiG,cAAe,EACfC,aAAc,GACdC,MAAM,EACNC,WAAY,CACVC,WAAW,GAEbC,YAAY,EACZC,QAAS,CAACC,EAAAA,GAAYC,EAAAA,IACtBC,UAAU,WAAU,SAEnBC,EAAQlC,KAAI,SAACxD,EAAK2F,GAAK,OACtB,SAAC,KAAW,WACV,SAAC,KAAW,CACV/F,MAAO,EACPF,aAAc,CAAEY,KAAM,OAAQwC,GAAI,OAAQvC,GAAI,QAC9CZ,UAAU,UAAS,UAEnB,SAAC,KAAK,CACJG,IAAKE,EACLN,aAAc,CAAEY,KAAM,OAAQwC,GAAI,OAAQvC,GAAI,QAC9Cd,YAAW,gBATCkG,EAYJ,KAItB,EAIMD,EAAU,CACd,uHACA,iIACA,sI,wFCnBF,MAtBA,WACE,IAAM1G,GAAWC,EAAAA,EAAAA,MACjB,GAAuC2G,EAAAA,EAAAA,KAA/B3B,EAAQ,EAARA,SAAU4B,EAAgB,EAAhBA,iBAClB,GAAkCC,EAAAA,EAAAA,WAAS,GAAK,eAAzCpD,EAAS,KAAEqD,EAAY,KAS9B,OAPAjB,EAAAA,EAAAA,YAAU,WACRe,EAAiB,CACfG,MAAO,GACPC,OAAQ,eACPC,SAAQ,kBAAMH,GAAa,EAAM,GACtC,GAAG,KAGD,SAACI,EAAA,EAAgB,CACflC,SAAUA,EAASmC,KACnB/D,MAAO,cACPK,UAAWA,EACX0B,WAAY,kBAAMpF,EAAS,aAAa,GAG9C,ECFA,EAhBa,YACXqH,EAAAA,EAAAA,GAAS,eACT,IAAQ9D,GAAe+D,EAAAA,EAAAA,KAAf/D,WAER,OACE,UAAC,KAAS,CAACgE,KAAM,CAAEjG,KAAM,eAAgBC,GAAI,gBAAiB,WAC5D,SAAC,EAAY,KACb,SAACiG,EAAA,EAA2B,CAC1BjE,WAAYA,EACZD,cAAe,aAEjB,SAAC,EAAe,MAGtB,C,yECnBamE,E,SAAqBC,GAAAA,IAAU,wmBAa3B,SAAC3H,GAAK,OAAMA,EAAMwE,cAAgB,OAAS,MAAM,G","sources":["components/Card/ProductCard.tsx","components/Card/CategoryCard.tsx","components/Container/CategoryScrollableContainer.tsx","components/Default/ErrorContainer.tsx","components/Default/NoProductContainer.tsx","components/Container/ProductContainer.tsx","hooks/useTitle.ts","components/Carousel/MainCarousel.tsx","pages/Home/ProductShowcase.tsx","pages/Home/Home.tsx","styled/StyledXScrollableWrapper.ts"],"sourcesContent":["import {\n  AspectRatio,\n  Box,\n  Center,\n  Divider,\n  Flex,\n  Image,\n  Text,\n} from \"@chakra-ui/react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Icon from \"../../assets/icons\";\nimport { IProductPayload } from \"../../interfaces/Product\";\nimport routes from \"../../routes/Routes\";\nimport { formatCurrency, handleImageOnError } from \"../../util/util\";\n\nconst ProductCard = ({ ...props }: IProductPayload) => {\n  const navigate = useNavigate();\n\n  return (\n    <Box\n      onClick={() => navigate(routes.PDP(props.id, props.name))}\n      flexShrink={0}\n      w={\"100%\"}\n      border={\"2px solid\"}\n      borderColor={\"light\"}\n      borderRadius={\"lg\"}\n      boxShadow={\"default\"}\n    >\n      <AspectRatio ratio={1} objectFit={\"cover\"} borderRadius={\"lg\"}>\n        <Image\n          src={props.product_photo?.url}\n          borderRadius={\"lg\"}\n          onError={handleImageOnError}\n        />\n      </AspectRatio>\n      <Flex p={3} direction={\"column\"}>\n        <Text\n          fontSize={{ base: \"md\", lg: \"lg\" }}\n          fontWeight={\"semibold\"}\n          textTransform={\"uppercase\"}\n          noOfLines={1}\n        >\n          {props.name}\n        </Text>\n        <Text\n          fontSize={{ base: \"lg\", lg: \"xl\" }}\n          fontWeight={\"bold\"}\n          color={\"primary\"}\n          mb={1}\n          noOfLines={1}\n          wordBreak={\"break-all\"}\n        >\n          Rp {formatCurrency(props.lowest_price!)}\n        </Text>\n        <Flex gap={2} alignItems={\"center\"} wrap={\"nowrap\"} mb={1}>\n          <Icon.Shop fill={\"primaryDarken\"} width={3.5} />\n          <Text\n            fontSize={\"xs\"}\n            fontWeight={\"semibold\"}\n            color={\"dark\"}\n            noOfLines={1}\n          >\n            {props.shop?.name}\n          </Text>\n        </Flex>\n        <Flex gap={2} alignItems={\"center\"} wrap={\"nowrap\"} mb={1}>\n          <Icon.Location fill={\"primaryDarken\"} width={3.5} />\n          <Text\n            fontSize={\"xs\"}\n            fontWeight={\"semibold\"}\n            color={\"dark\"}\n            noOfLines={1}\n          >\n            {props.shop?.location}\n          </Text>\n        </Flex>\n        <Flex gap={2} alignItems={\"center\"} mt={5}>\n          <Icon.Star fill={\"yellow.200\"} boxSize={{ base: 3, lg: 4 }} />\n          {props.rating! > 0 ? (\n            <Text\n              fontSize={{ base: \"xs\", lg: \"sm\" }}\n              fontWeight={\"semibold\"}\n              color={\"dark\"}\n            >\n              {props.rating}\n            </Text>\n          ) : (\n            <Text\n              fontSize={{ base: \"xs\", lg: \"sm\" }}\n              fontWeight={\"semibold\"}\n              color={\"dark\"}\n            >\n              -\n            </Text>\n          )}\n          {props.unit_sold! > 0 && (\n            <>\n              <Center height={{ base: \"10px\", lg: \"12px\" }}>\n                <Divider\n                  orientation=\"vertical\"\n                  borderWidth={1}\n                  borderColor={\"lightDarken\"}\n                />\n              </Center>\n              <Text\n                fontSize={{ base: \"xs\", lg: \"sm\" }}\n                fontWeight={\"semibold\"}\n                color={\"darkLighten\"}\n                noOfLines={1}\n              >\n                {props.unit_sold} sold\n              </Text>\n            </>\n          )}\n        </Flex>\n      </Flex>\n    </Box>\n  );\n};\n\nexport default ProductCard;\n","import { AspectRatio, Flex, Image, Text } from \"@chakra-ui/react\";\nimport { ICategoryCardProps } from \"../../interfaces/Category\";\nimport { handleImageOnError } from \"../../util/util\";\n\nconst CategoryCard = ({ ...props }: ICategoryCardProps) => {\n  return (\n    <Flex\n      role=\"button\"\n      onClick={props.onClick}\n      direction={{ base: \"row\", lg: \"column\" }}\n      flexShrink={0}\n      w={{\n        base: \"200px\",\n        lg: \"125px\",\n      }}\n      h={{\n        base: \"50px\",\n        lg: \"auto\",\n      }}\n      border={\"2px solid\"}\n      borderColor={\"light\"}\n      borderRadius={\"lg\"}\n      boxShadow={\"default\"}\n    >\n      <AspectRatio\n        ratio={1}\n        flexShrink={0}\n        width={{ base: \"25%\", lg: \"100%\" }}\n        height={{ base: \"100%\", lg: \"auto\" }}\n        borderRadius={\"lg\"}\n      >\n        <Image\n          src={props.icon}\n          borderRadius={\"lg\"}\n          onError={handleImageOnError}\n        />\n      </AspectRatio>\n      <Text\n        align={\"center\"}\n        variant={\"productCardTitle\"}\n        mx={2}\n        my={3}\n        noOfLines={{ base: 1, lg: 2 }}\n      >\n        {props.name}\n      </Text>\n    </Flex>\n  );\n};\n\nexport default CategoryCard;\n","import {\n  Box,\n  Center,\n  Flex,\n  Heading,\n  Link,\n  Skeleton,\n  Text,\n  VStack,\n} from \"@chakra-ui/react\";\nimport { useNavigate } from \"react-router-dom\";\nimport slugify from \"slugify\";\nimport Icon from \"../../assets/icons\";\nimport { ICategoryScrollableContainerProps } from \"../../interfaces/Components\";\nimport routes from \"../../routes/Routes\";\nimport { XScrollableWrapper } from \"../../styled/StyledXScrollableWrapper\";\nimport CategoryCard from \"../Card/CategoryCard\";\n\nfunction CategoryScrollableContainer(props: ICategoryScrollableContainerProps) {\n  const {\n    label,\n    categoryLevel,\n    categories,\n    primaryURL,\n    secondaryURL,\n    isLoading,\n    onError,\n  } = props;\n  const navigate = useNavigate();\n\n  const handleCardOnClick = (categoryId: number, categoryURL: string) => {\n    switch (categoryLevel) {\n      case \"primary\":\n        navigate(routes.PRIMARY_CATEGORY(categoryURL));\n        return;\n      case \"secondary\":\n        navigate(\n          routes.SECONDARY_CATEGORY(primaryURL!, categoryURL, categoryId)\n        );\n        return;\n      case \"tertiary\":\n        navigate(\n          routes.TERTIARY_CATEGORY(\n            primaryURL!,\n            secondaryURL!,\n            categoryURL,\n            categoryId\n          )\n        );\n        return;\n      default:\n        return;\n    }\n  };\n\n  return (\n    <>\n      {categories.length !== 0 && (\n        <Flex direction={\"column\"} my={2}>\n          <Flex justifyContent={\"space-between\"}>\n            <Heading\n              variant={\"sectionHeading\"}\n              fontSize={{ base: \"md\", sm: \"xl\", md: \"2xl\" }}\n            >\n              {label ?? \"Category\"}\n            </Heading>\n          </Flex>\n          {onError ? (\n            <Box bgColor={\"lightLighten\"} py={28} borderRadius={\"lg\"}>\n              <Center>\n                <VStack>\n                  <Text>Something has occurred..</Text>\n                  <Text\n                    as={Link}\n                    href={\"#\"}\n                    variant={\"link\"}\n                    alignItems={\"center\"}\n                    fontSize={\"lg\"}\n                  >\n                    <Icon.Refresh width={4} pb={\"2px\"} me={2} />\n                    Refresh\n                  </Text>\n                </VStack>\n              </Center>\n            </Box>\n          ) : (\n            <Skeleton isLoaded={!isLoading} borderRadius={\"lg\"}>\n              <XScrollableWrapper showScrollbar>\n                {categories.map((category) => (\n                  <CategoryCard\n                    {...category!}\n                    key={category.id!}\n                    onClick={() =>\n                      handleCardOnClick(category.id, slugify(category.name))\n                    }\n                  />\n                ))}\n              </XScrollableWrapper>\n            </Skeleton>\n          )}\n        </Flex>\n      )}\n    </>\n  );\n}\n\nexport default CategoryScrollableContainer;\n","import { Box, Button, Center, Text, VStack } from \"@chakra-ui/react\";\nimport Icon from \"../../assets/icons\";\nimport { IErrorContainerProps } from \"../../interfaces/Components\";\n\nfunction ErrorContainer(props: IErrorContainerProps) {\n  const { onError } = props;\n\n  return (\n    <Box bgColor={\"lightLighten\"} py={28} borderRadius={\"lg\"}>\n      <Center>\n        <VStack>\n          <Text>Something has occurred..</Text>\n          <Text\n            as={Button}\n            onClick={() => onError && onError()}\n            alignItems={\"center\"}\n            fontSize={\"lg\"}\n          >\n            <Icon.Refresh width={4} pb={\"2px\"} me={2} />\n            Refresh\n          </Text>\n        </VStack>\n      </Center>\n    </Box>\n  );\n}\n\nexport default ErrorContainer;\n","import { Box, Button, Center, Text, VStack } from \"@chakra-ui/react\";\nimport Icon from \"../../assets/icons\";\nimport { INoProductContainerProps } from \"../../interfaces/Components\";\n\nfunction NoProductContainer(props: INoProductContainerProps) {\n  const { onReload } = props;\n\n  return (\n    <Box bgColor={\"lightLighten\"} py={28} borderRadius={\"lg\"}>\n      <Center>\n        <VStack>\n          <Text>No products to display.</Text>\n          <Text\n            as={Button}\n            onClick={() => onReload && onReload()}\n            alignItems={\"center\"}\n            fontSize={\"lg\"}\n          >\n            <Icon.Refresh width={4} pb={\"2px\"} me={2} />\n            Refresh\n          </Text>\n        </VStack>\n      </Center>\n    </Box>\n  );\n}\n\nexport default NoProductContainer;\n","import {\n  Button,\n  Center,\n  Flex,\n  Grid,\n  Heading,\n  HStack,\n  Skeleton,\n  Text,\n} from \"@chakra-ui/react\";\nimport Icon from \"../../assets/icons\";\nimport { IProductContainerProps } from \"../../interfaces/Components\";\nimport ProductCard from \"../Card/ProductCard\";\nimport ErrorContainer from \"../Default/ErrorContainer\";\nimport NoProductContainer from \"../Default/NoProductContainer\";\n\nfunction ProductContainer(props: IProductContainerProps) {\n  const {\n    products,\n    label,\n    isLoading,\n    isError,\n    onError,\n    loadMoreLabel,\n    onLoadMore,\n    seeMoreLabel,\n    onSeeMore,\n  } = props;\n  return (\n    <Flex direction={{ base: \"column\", lg: \"column\" }} my={10}>\n      <Flex justifyContent={\"space-between\"}>\n        <Heading\n          variant={\"sectionHeading\"}\n          fontSize={{ base: \"md\", sm: \"xl\", md: \"2xl\" }}\n        >\n          {label}\n        </Heading>\n        {onSeeMore && (\n          <HStack alignItems={\"center\"}>\n            <Text variant={\"link\"} onClick={onSeeMore}>\n              {seeMoreLabel ?? \"see more\"}\n              <Icon.ChevronRight width={4} pb={\"2px\"} />\n            </Text>\n          </HStack>\n        )}\n      </Flex>\n      {isError ? (\n        <ErrorContainer onError={onError} />\n      ) : (\n        <>\n          {products.length === 0 ? (\n            <NoProductContainer onReload={onError} />\n          ) : (\n            <Skeleton isLoaded={!isLoading} borderRadius={\"lg\"}>\n              <Grid\n                templateColumns={{\n                  base: \"repeat(2, 1fr)\",\n                  md: \"repeat(4, 1fr)\",\n                  lg: \"repeat(6, 1fr)\",\n                }}\n                gap={3}\n              >\n                {products.length !== 0 &&\n                  products.map((product) => (\n                    <ProductCard key={product.id} {...product} />\n                  ))}\n              </Grid>\n              {onLoadMore && (\n                <Center mt={5}>\n                  <Button variant={\"primary\"} onClick={() => onLoadMore()}>\n                    {loadMoreLabel ?? \"See All Products\"}\n                  </Button>\n                </Center>\n              )}\n            </Skeleton>\n          )}\n        </>\n      )}\n    </Flex>\n  );\n}\n\nexport default ProductContainer;\n","import React, { useEffect } from \"react\";\n\nconst useTitle = (title = \"BAZR\") => {\n  const titleDom = document.getElementById(\"title\") as HTMLTitleElement;\n\n  useEffect(() => {\n    titleDom.innerHTML = title;\n  }, [title]);\n};\n\nexport default useTitle;\n","import { AspectRatio, Image } from \"@chakra-ui/react\";\nimport { Navigation, Pagination } from \"swiper\";\nimport \"swiper/css\";\nimport \"swiper/css/navigation\";\nimport \"swiper/css/pagination\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport { IMainCarouselProps } from \"../../interfaces/Components\";\nimport \"./style.css\";\n\nfunction MainCarousel(props: IMainCarouselProps) {\n  return (\n    <Swiper\n      slidesPerView={1}\n      spaceBetween={30}\n      loop={true}\n      pagination={{\n        clickable: true,\n      }}\n      navigation={true}\n      modules={[Pagination, Navigation]}\n      className=\"mySwiper\"\n    >\n      {content.map((url, index) => (\n        <SwiperSlide key={index}>\n          <AspectRatio\n            ratio={21 / 7}\n            borderRadius={{ base: \"10px\", md: \"20px\", lg: \"30px\" }}\n            boxShadow=\"default\"\n          >\n            <Image\n              src={url}\n              borderRadius={{ base: \"10px\", md: \"20px\", lg: \"30px\" }}\n              borderColor={`teal.300`}\n            />\n          </AspectRatio>\n        </SwiperSlide>\n      ))}\n    </Swiper>\n  );\n}\n\nexport default MainCarousel;\n\nconst content = [\n  \"https://res.cloudinary.com/dk3xvbob3/image/upload/v1672978311/BAZR/DB/Carousel/Blog_Banner-Tokopedia-Fair_ofk48c.jpg\",\n  \"https://res.cloudinary.com/dk3xvbob3/image/upload/v1672978322/BAZR/DB/Carousel/06df6f5e-6477-4f0f-a194-21569793e17d_jn6c8q.png\",\n  \"https://res.cloudinary.com/dk3xvbob3/image/upload/v1672973337/BAZR/DB/Carousel/f09b50a8-da23-45de-a931-f2a433e8276a.jpg_aca4iy.jpg\",\n];\n","import { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport ProductContainer from \"../../components/Container/ProductContainer\";\nimport useProduct from \"../../hooks/useProduct\";\n\nfunction ProductShowcase() {\n  const navigate = useNavigate();\n  const { products, fetchAllProducts } = useProduct();\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    fetchAllProducts({\n      limit: 18,\n      sortBy: \"view_count\",\n    }).finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <ProductContainer\n      products={products.data}\n      label={\"Recommended\"}\n      isLoading={isLoading}\n      onLoadMore={() => navigate(\"/search?q=\")}\n    />\n  );\n}\n\nexport default ProductShowcase;\n","import { Container } from \"@chakra-ui/react\";\nimport MainCarousel from \"../../components/Carousel/MainCarousel\";\nimport CategoryScrollableContainer from \"../../components/Container/CategoryScrollableContainer\";\nimport useCategory from \"../../hooks/useCategory\";\nimport useTitle from \"../../hooks/useTitle\";\nimport ProductShowcase from \"./ProductShowcase\";\n\nconst Home = () => {\n  useTitle(\"Home | BAZR\");\n  const { categories } = useCategory();\n\n  return (\n    <Container maxW={{ base: \"container.sm\", lg: \"container.xl\" }}>\n      <MainCarousel />\n      <CategoryScrollableContainer\n        categories={categories}\n        categoryLevel={\"primary\"}\n      />\n      <ProductShowcase />\n    </Container>\n  );\n};\n\nexport default Home;\n","import styled from \"styled-components\";\n\nexport const XScrollableWrapper = styled.div<{ showScrollbar?: boolean }>`\n  display: flex;\n  flex-direction: row;\n  gap: 0.5rem;\n  padding-bottom: 5px;\n  overflow-x: scroll;\n\n  &:hover {\n    ::-webkit-scrollbar {\n      height: 5px;\n    }\n\n    ::-webkit-scrollbar-track {\n      display: ${(props) => (props.showScrollbar ? \"flex\" : \"none\")};\n      box-shadow: inset 0 0 2px #4fd1c5;\n      border-radius: 10px;\n    }\n\n    ::-webkit-scrollbar-thumb {\n      background: #4fd1c5;\n      border-radius: 10px;\n    }\n  }\n\n  ::-webkit-scrollbar {\n    height: 5px;\n  }\n\n  ::-webkit-scrollbar-track {\n    border-radius: 10px;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background: transparent;\n  }\n`;\n"],"names":["props","navigate","useNavigate","onClick","routes","id","name","flexShrink","w","border","borderColor","borderRadius","boxShadow","ratio","objectFit","src","product_photo","url","onError","handleImageOnError","p","direction","fontSize","base","lg","fontWeight","textTransform","noOfLines","color","mb","wordBreak","formatCurrency","lowest_price","gap","alignItems","wrap","fill","width","shop","location","mt","boxSize","rating","unit_sold","height","orientation","borderWidth","role","h","icon","align","variant","mx","my","label","categoryLevel","categories","primaryURL","secondaryURL","isLoading","length","justifyContent","sm","md","bgColor","py","as","Link","href","pb","me","isLoaded","showScrollbar","map","category","key","categoryId","categoryURL","handleCardOnClick","slugify","Button","onReload","products","isError","loadMoreLabel","onLoadMore","seeMoreLabel","onSeeMore","templateColumns","product","ProductCard","title","titleDom","document","getElementById","useEffect","innerHTML","slidesPerView","spaceBetween","loop","pagination","clickable","navigation","modules","Pagination","Navigation","className","content","index","useProduct","fetchAllProducts","useState","setIsLoading","limit","sortBy","finally","ProductContainer","data","useTitle","useCategory","maxW","CategoryScrollableContainer","XScrollableWrapper","styled"],"sourceRoot":""}
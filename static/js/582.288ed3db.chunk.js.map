{"version":3,"file":"static/js/582.288ed3db.chunk.js","mappings":"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","sources":["api/service/shopOrder.ts","hooks/useShopOrder.ts","pages/Seller/Shipment/DeliveryLabelTemplate.tsx","pages/Seller/Shipment/DeliveryLabel.tsx"],"sourcesContent":["import {\n  IShopOrderResponsePayload,\n  IShopOrdersResponsePayload,\n  IShopOrderUpdateStatusPayload,\n} from \"../../interfaces/Order\";\nimport instance from \"../config/axios\";\nimport { API_PATH } from \"../path\";\n\nconst getAllOrders = async (\n  shopId: number,\n  status: string,\n  page: number,\n  limit: number\n): Promise<IShopOrdersResponsePayload> => {\n  try {\n    const response = await instance.get<IShopOrdersResponsePayload>(\n      API_PATH.shop.SHOPS +\n        `/${shopId}/orders?status=${status}&page=${page}&limit=${limit}`\n    );\n\n    return response.data;\n  } catch (err) {\n    return err as IShopOrdersResponsePayload;\n  }\n};\n\nconst getOrder = async (\n  shopId: number,\n  orderId: number\n): Promise<IShopOrderResponsePayload> => {\n  try {\n    const response = await instance.get<IShopOrderResponsePayload>(\n      API_PATH.shop.SHOPS + `/${shopId}/orders/${orderId}`\n    );\n\n    return response.data;\n  } catch (err) {\n    return err as IShopOrderResponsePayload;\n  }\n};\n\nconst putOrder = async (\n  shopId: number,\n  orderId: number,\n  payload: IShopOrderUpdateStatusPayload\n): Promise<IShopOrderResponsePayload> => {\n  try {\n    const response = await instance.put<IShopOrderResponsePayload>(\n      API_PATH.shop.SHOPS + `/${shopId}/orders/${orderId}`,\n      payload\n    );\n\n    return response.data;\n  } catch (err) {\n    return err as IShopOrderResponsePayload;\n  }\n};\n\nconst shopOrderService = {\n  getAllOrders,\n  getOrder,\n  putOrder,\n};\n\nexport default shopOrderService;\n","import React, { useState } from \"react\";\nimport shopOrderService from \"../api/service/shopOrder\";\nimport {\n  IShopOrderDetailFullPayload,\n  IShopOrderPaginationPayload,\n  IShopOrderUpdateStatusPayload,\n} from \"../interfaces/Order\";\n\nfunction useShopOrder() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [shopOrders, setShopOrders] = useState<IShopOrderPaginationPayload>();\n  const [shopOrder, setShopOrder] = useState<IShopOrderDetailFullPayload>();\n\n  const fetchAllShopOrders = async (\n    shopId: number,\n    status: string,\n    page: number,\n    limit: number\n  ) => {\n    setIsLoading(true);\n    const response = await shopOrderService.getAllOrders(\n      shopId,\n      status,\n      page,\n      limit\n    );\n    setIsLoading(false);\n\n    if (response.is_success) {\n      setShopOrders(response.data);\n    }\n\n    return response;\n  };\n\n  const fetchShopOrder = async (shopId: number, orderId: number) => {\n    setIsLoading(true);\n    const response = await shopOrderService.getOrder(shopId, orderId);\n    setIsLoading(false);\n\n    if (response.is_success) {\n      setShopOrder(response.data);\n    }\n\n    return response;\n  };\n\n  const updateShopOrder = async (\n    shopId: number,\n    orderId: number,\n    payload: IShopOrderUpdateStatusPayload\n  ) => {\n    setIsLoading(true);\n    const response = await shopOrderService.putOrder(shopId, orderId, payload);\n    setIsLoading(false);\n\n    if (response.is_success) {\n      setShopOrder(response.data);\n    }\n\n    return response;\n  };\n\n  return {\n    fetchAllShopOrders,\n    fetchShopOrder,\n    updateShopOrder,\n    isLoading,\n    shopOrders,\n    shopOrder,\n  };\n}\n\nexport default useShopOrder;\n","import { Box, Flex, Text, Image, Divider } from \"@chakra-ui/react\";\nimport Barcode from \"react-barcode\";\nimport React, { useEffect, useState } from \"react\";\nimport { IShopOrderDetailFullPayload } from \"../../../interfaces/Order\";\nimport useShop from \"../../../hooks/useShop\";\nimport { IShopProfilePayload } from \"../../../interfaces/Shop\";\nimport { formatCurrency } from \"../../../util/util\";\n\nconst DeliveryLabelTemplate = React.forwardRef<\n  HTMLDivElement,\n  IShopOrderDetailFullPayload\n>((props: IShopOrderDetailFullPayload, ref) => {\n  const { fetchShopProfileById } = useShop();\n  const [shop, setShop] = useState<IShopProfilePayload>();\n  const current = new Date();\n  const date = `${current.getDate()}/${\n    current.getMonth() + 1\n  }/${current.getFullYear()}`;\n\n  const updateShopDetail = async () => {\n    const response = await fetchShopProfileById(props.shop_id);\n    setShop(response ? response : undefined);\n  };\n\n  useEffect(() => {\n    updateShopDetail();\n  });\n\n  return (\n    <div ref={ref}>\n      <Box bg=\"white\">\n        <Flex direction={\"column\"} width=\"80%\" border={\"2px\"} p={5}>\n          <Flex\n            direction={\"row\"}\n            width=\"100%\"\n            justifyContent={\"space-between\"}\n            alignItems=\"center\"\n          >\n            <Image boxSize={\"85px\"} src=\"/logo.svg\"></Image>\n            <Text fontSize={\"35px\"} fontWeight={\"bold\"}>\n              REG\n            </Text>\n            <Text fontSize={\"30px\"} fontWeight={\"semibold\"}>\n              {props.delivery_detail.courier_name}\n            </Text>\n          </Flex>\n          <Divider border={\"5px\"} my={3} />\n          <Flex direction={\"column\"} width=\"100%\" alignItems=\"center\">\n            <Text\n              fontSize={\"25px\"}\n              fontWeight={\"semibold\"}\n              border={\"2px\"}\n              width=\"100%\"\n              textAlign={\"center\"}\n              p={3}\n            >\n              {\"Order No: \" + props.order_id}\n            </Text>\n            <Barcode\n              width={1}\n              value={\n                String(props.order_id) +\n                String(props.transaction_detail.transaction_date)\n              }\n            />\n          </Flex>\n          <Divider border={\"5px\"} my={3} />\n          <Flex direction={\"row\"} width={\"100%\"} gap={2}>\n            <Flex direction={\"column\"} width={\"50%\"}>\n              <Text fontSize={\"23px\"} fontWeight={\"semibold\"}>\n                Reciever:\n              </Text>\n              <Text fontSize={\"18px\"} fontWeight=\"medium\">\n                {props.transaction_detail.address.recipient_name}\n              </Text>\n              <Text fontSize={\"18px\"}>\n                {props.transaction_detail.address.street_name +\n                  \", \" +\n                  props.transaction_detail.address.district_ward +\n                  \", \" +\n                  props.transaction_detail.address.sub_district +\n                  \", \" +\n                  props.transaction_detail.address.zip_code}\n              </Text>\n              <Text fontSize={\"18px\"}>\n                {props.transaction_detail.address.recipient_phone}\n              </Text>\n            </Flex>\n            <Flex direction={\"column\"} width={\"50%\"}>\n              <Text fontSize={\"23px\"} fontWeight={\"semibold\"}>\n                Sender:\n              </Text>\n              <Text fontSize={\"18px\"} fontWeight=\"medium\">\n                {shop?.name}\n              </Text>\n              <Text fontSize={\"18px\"}>{shop?.city}</Text>\n            </Flex>\n          </Flex>\n          <Divider border={\"5px\"} my={3} />\n          <Flex direction={\"row\"} width={\"100%\"} gap={2}>\n            <Flex\n              direction={\"column\"}\n              width={\"50%\"}\n              justifyContent=\"center\"\n              fontSize={\"18px\"}\n            >\n              <Flex\n                direction=\"row\"\n                width=\"100%\"\n                justifyContent={\"space-between\"}\n              >\n                <Text fontSize={\"18px\"} fontWeight=\"medium\">\n                  Payment Method:\n                </Text>\n                <Text fontSize={\"18px\"}>\n                  {props.transaction_detail.payment_method}\n                </Text>\n              </Flex>\n              <Divider />\n              <Flex\n                direction=\"row\"\n                width=\"100%\"\n                justifyContent={\"space-between\"}\n              >\n                <Text fontSize={\"18px\"} fontWeight=\"medium\">\n                  Order Total:\n                </Text>\n                <Text fontSize={\"18px\"}>\n                  {\"Rp\" + formatCurrency(props.total)}\n                </Text>\n              </Flex>\n              <Divider />\n              <Flex\n                direction=\"row\"\n                width=\"100%\"\n                justifyContent={\"space-between\"}\n              >\n                <Text fontSize={\"18px\"} fontWeight=\"medium\">\n                  Process Date:\n                </Text>\n                <Text fontSize={\"18px\"}>{date}</Text>\n              </Flex>\n            </Flex>\n            <Flex direction={\"column\"} width={\"50%\"} alignItems={\"center\"}>\n              <Barcode\n                width={1}\n                value={\n                  \"SKU\" +\n                  String(props.order_id) +\n                  String(props.transaction_detail.transaction_id) +\n                  \"0123\"\n                }\n              />\n            </Flex>\n          </Flex>\n        </Flex>\n      </Box>\n    </div>\n  );\n});\n\nexport default DeliveryLabelTemplate;\n","import { Button } from \"@chakra-ui/react\";\nimport DeliveryLabelTemplate from \"./DeliveryLabelTemplate\";\nimport { BsPrinter } from \"react-icons/bs\";\n\nimport { useReactToPrint } from \"react-to-print\";\nimport { useEffect, useRef } from \"react\";\nimport useShopOrder from \"../../../hooks/useShopOrder\";\nimport useUser from \"../../../hooks/useUser\";\nimport { useParams } from \"react-router-dom\";\n\nfunction DeliveryLabel() {\n  const componentRef = useRef<HTMLDivElement>(null);\n  const { shopOrder, fetchShopOrder } = useShopOrder();\n\n  const handlePrint = useReactToPrint({\n    content: () => componentRef.current,\n    documentTitle: \"bazr-order-label-\" + shopOrder?.order_id,\n  });\n\n  const { user } = useUser();\n  const { id } = useParams();\n\n  useEffect(() => {\n    fetchShopOrder(user?.shop_id ?? 0, Number(id));\n  }, []);\n\n  return (\n    <>\n      <Button\n        leftIcon={<BsPrinter />}\n        onClick={handlePrint}\n        colorScheme=\"orange\"\n        variant=\"solid\"\n        my={5}\n      >\n        Print Delivery Label\n      </Button>\n      {!shopOrder ? (\n        \"\"\n      ) : (\n        <DeliveryLabelTemplate\n          ref={componentRef}\n          shop_id={shopOrder.shop_id}\n          order_id={shopOrder.order_id}\n          order_status={shopOrder.order_status}\n          estimated_delivery_date={shopOrder.estimated_delivery_date}\n          transaction_detail={shopOrder.transaction_detail}\n          delivery_detail={shopOrder.delivery_detail}\n          order_details={shopOrder.order_details}\n          voucher={shopOrder.voucher}\n          subtotal={shopOrder.subtotal}\n          total={shopOrder.total}\n        />\n      )}\n    </>\n  );\n}\n\nexport default DeliveryLabel;\n"],"names":["getAllOrders","shopId","status","page","limit","instance","API_PATH","response","data","getOrder","orderId","putOrder","payload","useState","isLoading","setIsLoading","shopOrders","setShopOrders","shopOrder","setShopOrder","fetchAllShopOrders","shopOrderService","is_success","fetchShopOrder","updateShopOrder","DeliveryLabelTemplate","React","props","ref","fetchShopProfileById","useShop","shop","setShop","current","Date","date","getDate","getMonth","getFullYear","updateShopDetail","shop_id","undefined","useEffect","bg","direction","width","border","p","justifyContent","alignItems","boxSize","src","fontSize","fontWeight","delivery_detail","courier_name","my","textAlign","order_id","value","String","transaction_detail","transaction_date","gap","address","recipient_name","street_name","district_ward","sub_district","zip_code","recipient_phone","name","city","payment_method","formatCurrency","total","transaction_id","componentRef","useRef","useShopOrder","handlePrint","useReactToPrint","content","documentTitle","user","useUser","id","useParams","Number","leftIcon","onClick","colorScheme","variant","order_status","estimated_delivery_date","order_details","voucher","subtotal"],"sourceRoot":""}
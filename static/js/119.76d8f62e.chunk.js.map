{"version":3,"file":"static/js/119.76d8f62e.chunk.js","mappings":"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","sources":["../node_modules/@chakra-ui/visually-hidden/dist/index.esm.js","../node_modules/@chakra-ui/checkbox/dist/index.esm.js","../node_modules/@chakra-ui/react-use-controllable-state/dist/index.esm.js","../node_modules/@zag-js/focus-visible/src/index.ts"],"sourcesContent":["// ../../../react-shim.js\nimport React from \"react\";\n\n// src/visually-hidden.tsx\nimport { chakra } from \"@chakra-ui/system\";\n\n// src/visually-hidden.style.ts\nvar visuallyHiddenStyle = {\n  border: \"0\",\n  clip: \"rect(0, 0, 0, 0)\",\n  height: \"1px\",\n  width: \"1px\",\n  margin: \"-1px\",\n  padding: \"0\",\n  overflow: \"hidden\",\n  whiteSpace: \"nowrap\",\n  position: \"absolute\"\n};\n\n// src/visually-hidden.tsx\nvar VisuallyHidden = chakra(\"span\", {\n  baseStyle: visuallyHiddenStyle\n});\nVisuallyHidden.displayName = \"VisuallyHidden\";\nvar VisuallyHiddenInput = chakra(\"input\", {\n  baseStyle: visuallyHiddenStyle\n});\nVisuallyHiddenInput.displayName = \"VisuallyHiddenInput\";\nvar visually_hidden_default = VisuallyHidden;\nexport {\n  VisuallyHidden,\n  VisuallyHiddenInput,\n  visually_hidden_default as default,\n  visuallyHiddenStyle\n};\n","// ../../../react-shim.js\nimport React from \"react\";\n\n// src/checkbox-group.tsx\nimport { useMemo } from \"react\";\n\n// src/checkbox-context.ts\nimport { createContext } from \"@chakra-ui/react-context\";\nvar [CheckboxGroupProvider, useCheckboxGroupContext] = createContext({\n  name: \"CheckboxGroupContext\",\n  strict: false\n});\n\n// src/use-checkbox-group.ts\nimport { useCallbackRef } from \"@chakra-ui/react-use-callback-ref\";\nimport { useControllableState } from \"@chakra-ui/react-use-controllable-state\";\n\n// ../../utilities/shared-utils/src/index.ts\nvar cx = (...classNames) => classNames.filter(Boolean).join(\" \");\nfunction isObject(value) {\n  const type = typeof value;\n  return value != null && (type === \"object\" || type === \"function\") && !Array.isArray(value);\n}\nvar dataAttr = (condition) => condition ? \"\" : void 0;\nfunction callAllHandlers(...fns) {\n  return function func(event) {\n    fns.some((fn) => {\n      fn == null ? void 0 : fn(event);\n      return event == null ? void 0 : event.defaultPrevented;\n    });\n  };\n}\nfunction callAll(...fns) {\n  return function mergedFn(arg) {\n    fns.forEach((fn) => {\n      fn == null ? void 0 : fn(arg);\n    });\n  };\n}\n\n// src/use-checkbox-group.ts\nimport { useCallback } from \"react\";\nfunction isInputEvent(value) {\n  return value && isObject(value) && isObject(value.target);\n}\nfunction useCheckboxGroup(props = {}) {\n  const {\n    defaultValue,\n    value: valueProp,\n    onChange,\n    isDisabled,\n    isNative\n  } = props;\n  const onChangeProp = useCallbackRef(onChange);\n  const [value, setValue] = useControllableState({\n    value: valueProp,\n    defaultValue: defaultValue || [],\n    onChange: onChangeProp\n  });\n  const handleChange = useCallback((eventOrValue) => {\n    if (!value)\n      return;\n    const isChecked = isInputEvent(eventOrValue) ? eventOrValue.target.checked : !value.includes(eventOrValue);\n    const selectedValue = isInputEvent(eventOrValue) ? eventOrValue.target.value : eventOrValue;\n    const nextValue = isChecked ? [...value, selectedValue] : value.filter((v) => String(v) !== String(selectedValue));\n    setValue(nextValue);\n  }, [setValue, value]);\n  const getCheckboxProps = useCallback((props2 = {}) => {\n    const checkedKey = isNative ? \"checked\" : \"isChecked\";\n    return {\n      ...props2,\n      [checkedKey]: value.some((val) => String(props2.value) === String(val)),\n      onChange: handleChange\n    };\n  }, [handleChange, isNative, value]);\n  return {\n    value,\n    isDisabled,\n    onChange: handleChange,\n    setValue,\n    getCheckboxProps\n  };\n}\n\n// src/checkbox-group.tsx\nfunction CheckboxGroup(props) {\n  const { colorScheme, size, variant, children, isDisabled } = props;\n  const { value, onChange } = useCheckboxGroup(props);\n  const group = useMemo(() => ({\n    size,\n    onChange,\n    colorScheme,\n    value,\n    variant,\n    isDisabled\n  }), [size, onChange, colorScheme, value, variant, isDisabled]);\n  return /* @__PURE__ */ React.createElement(CheckboxGroupProvider, {\n    value: group,\n    children\n  });\n}\nCheckboxGroup.displayName = \"CheckboxGroup\";\n\n// src/checkbox-icon.tsx\nimport { chakra } from \"@chakra-ui/system\";\nfunction CheckIcon(props) {\n  return /* @__PURE__ */ React.createElement(chakra.svg, {\n    width: \"1.2em\",\n    viewBox: \"0 0 12 10\",\n    style: {\n      fill: \"none\",\n      strokeWidth: 2,\n      stroke: \"currentColor\",\n      strokeDasharray: 16\n    },\n    ...props\n  }, /* @__PURE__ */ React.createElement(\"polyline\", {\n    points: \"1.5 6 4.5 9 10.5 1\"\n  }));\n}\nfunction IndeterminateIcon(props) {\n  return /* @__PURE__ */ React.createElement(chakra.svg, {\n    width: \"1.2em\",\n    viewBox: \"0 0 24 24\",\n    style: { stroke: \"currentColor\", strokeWidth: 4 },\n    ...props\n  }, /* @__PURE__ */ React.createElement(\"line\", {\n    x1: \"21\",\n    x2: \"3\",\n    y1: \"12\",\n    y2: \"12\"\n  }));\n}\nfunction CheckboxIcon(props) {\n  const { isIndeterminate, isChecked, ...rest } = props;\n  const BaseIcon = isIndeterminate ? IndeterminateIcon : CheckIcon;\n  return isChecked || isIndeterminate ? /* @__PURE__ */ React.createElement(chakra.div, {\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      height: \"100%\"\n    }\n  }, /* @__PURE__ */ React.createElement(BaseIcon, {\n    ...rest\n  })) : null;\n}\n\n// src/checkbox.tsx\nimport {\n  chakra as chakra2,\n  forwardRef,\n  keyframes,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cloneElement, useMemo as useMemo2 } from \"react\";\n\n// src/use-checkbox.ts\nimport { useFormControlProps } from \"@chakra-ui/form-control\";\nimport { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\";\nimport { useUpdateEffect } from \"@chakra-ui/react-use-update-effect\";\nimport { useCallbackRef as useCallbackRef2 } from \"@chakra-ui/react-use-callback-ref\";\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\";\n\n// ../../utilities/object-utils/src/index.ts\nfunction omit(object, keysToOmit = []) {\n  const clone = Object.assign({}, object);\n  for (const key of keysToOmit) {\n    if (key in clone)\n      delete clone[key];\n  }\n  return clone;\n}\n\n// src/use-checkbox.ts\nimport { visuallyHiddenStyle } from \"@chakra-ui/visually-hidden\";\nimport { trackFocusVisible } from \"@zag-js/focus-visible\";\nimport { useCallback as useCallback2, useEffect, useRef, useState } from \"react\";\nfunction useCheckbox(props = {}) {\n  const formControlProps = useFormControlProps(props);\n  const {\n    isDisabled,\n    isReadOnly,\n    isRequired,\n    isInvalid,\n    id,\n    onBlur,\n    onFocus,\n    \"aria-describedby\": ariaDescribedBy\n  } = formControlProps;\n  const {\n    defaultChecked,\n    isChecked: checkedProp,\n    isFocusable,\n    onChange,\n    isIndeterminate,\n    name,\n    value,\n    tabIndex = void 0,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    \"aria-invalid\": ariaInvalid,\n    ...rest\n  } = props;\n  const htmlProps = omit(rest, [\n    \"isDisabled\",\n    \"isReadOnly\",\n    \"isRequired\",\n    \"isInvalid\",\n    \"id\",\n    \"onBlur\",\n    \"onFocus\",\n    \"aria-describedby\"\n  ]);\n  const onChangeProp = useCallbackRef2(onChange);\n  const onBlurProp = useCallbackRef2(onBlur);\n  const onFocusProp = useCallbackRef2(onFocus);\n  const [isFocusVisible, setIsFocusVisible] = useState(false);\n  const [isFocused, setFocused] = useState(false);\n  const [isHovered, setHovered] = useState(false);\n  const [isActive, setActive] = useState(false);\n  useEffect(() => {\n    return trackFocusVisible(setIsFocusVisible);\n  }, []);\n  const inputRef = useRef(null);\n  const [rootIsLabelElement, setRootIsLabelElement] = useState(true);\n  const [checkedState, setCheckedState] = useState(!!defaultChecked);\n  const isControlled = checkedProp !== void 0;\n  const isChecked = isControlled ? checkedProp : checkedState;\n  const handleChange = useCallback2((event) => {\n    if (isReadOnly || isDisabled) {\n      event.preventDefault();\n      return;\n    }\n    if (!isControlled) {\n      if (isChecked) {\n        setCheckedState(event.target.checked);\n      } else {\n        setCheckedState(isIndeterminate ? true : event.target.checked);\n      }\n    }\n    onChangeProp == null ? void 0 : onChangeProp(event);\n  }, [\n    isReadOnly,\n    isDisabled,\n    isChecked,\n    isControlled,\n    isIndeterminate,\n    onChangeProp\n  ]);\n  useSafeLayoutEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.indeterminate = Boolean(isIndeterminate);\n    }\n  }, [isIndeterminate]);\n  useUpdateEffect(() => {\n    if (isDisabled) {\n      setFocused(false);\n    }\n  }, [isDisabled, setFocused]);\n  useSafeLayoutEffect(() => {\n    const el = inputRef.current;\n    if (!(el == null ? void 0 : el.form))\n      return;\n    el.form.onreset = () => {\n      setCheckedState(!!defaultChecked);\n    };\n  }, []);\n  const trulyDisabled = isDisabled && !isFocusable;\n  const onKeyDown = useCallback2((event) => {\n    if (event.key === \" \") {\n      setActive(true);\n    }\n  }, [setActive]);\n  const onKeyUp = useCallback2((event) => {\n    if (event.key === \" \") {\n      setActive(false);\n    }\n  }, [setActive]);\n  useSafeLayoutEffect(() => {\n    if (!inputRef.current)\n      return;\n    const notInSync = inputRef.current.checked !== isChecked;\n    if (notInSync) {\n      setCheckedState(inputRef.current.checked);\n    }\n  }, [inputRef.current]);\n  const getCheckboxProps = useCallback2((props2 = {}, forwardedRef = null) => {\n    const onPressDown = (event) => {\n      if (isFocused) {\n        event.preventDefault();\n      }\n      setActive(true);\n    };\n    return {\n      ...props2,\n      ref: forwardedRef,\n      \"data-active\": dataAttr(isActive),\n      \"data-hover\": dataAttr(isHovered),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-focus\": dataAttr(isFocused),\n      \"data-focus-visible\": dataAttr(isFocused && isFocusVisible),\n      \"data-indeterminate\": dataAttr(isIndeterminate),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly),\n      \"aria-hidden\": true,\n      onMouseDown: callAllHandlers(props2.onMouseDown, onPressDown),\n      onMouseUp: callAllHandlers(props2.onMouseUp, () => setActive(false)),\n      onMouseEnter: callAllHandlers(props2.onMouseEnter, () => setHovered(true)),\n      onMouseLeave: callAllHandlers(props2.onMouseLeave, () => setHovered(false))\n    };\n  }, [\n    isActive,\n    isChecked,\n    isDisabled,\n    isFocused,\n    isFocusVisible,\n    isHovered,\n    isIndeterminate,\n    isInvalid,\n    isReadOnly\n  ]);\n  const getRootProps = useCallback2((props2 = {}, forwardedRef = null) => ({\n    ...htmlProps,\n    ...props2,\n    ref: mergeRefs(forwardedRef, (node) => {\n      if (!node)\n        return;\n      setRootIsLabelElement(node.tagName === \"LABEL\");\n    }),\n    onClick: callAllHandlers(props2.onClick, () => {\n      var _a;\n      if (!rootIsLabelElement) {\n        (_a = inputRef.current) == null ? void 0 : _a.click();\n        requestAnimationFrame(() => {\n          var _a2;\n          (_a2 = inputRef.current) == null ? void 0 : _a2.focus();\n        });\n      }\n    }),\n    \"data-disabled\": dataAttr(isDisabled),\n    \"data-checked\": dataAttr(isChecked),\n    \"data-invalid\": dataAttr(isInvalid)\n  }), [htmlProps, isDisabled, isChecked, isInvalid, rootIsLabelElement]);\n  const getInputProps = useCallback2((props2 = {}, forwardedRef = null) => {\n    return {\n      ...props2,\n      ref: mergeRefs(inputRef, forwardedRef),\n      type: \"checkbox\",\n      name,\n      value,\n      id,\n      tabIndex,\n      onChange: callAllHandlers(props2.onChange, handleChange),\n      onBlur: callAllHandlers(props2.onBlur, onBlurProp, () => setFocused(false)),\n      onFocus: callAllHandlers(props2.onFocus, onFocusProp, () => setFocused(true)),\n      onKeyDown: callAllHandlers(props2.onKeyDown, onKeyDown),\n      onKeyUp: callAllHandlers(props2.onKeyUp, onKeyUp),\n      required: isRequired,\n      checked: isChecked,\n      disabled: trulyDisabled,\n      readOnly: isReadOnly,\n      \"aria-label\": ariaLabel,\n      \"aria-labelledby\": ariaLabelledBy,\n      \"aria-invalid\": ariaInvalid ? Boolean(ariaInvalid) : isInvalid,\n      \"aria-describedby\": ariaDescribedBy,\n      \"aria-disabled\": isDisabled,\n      style: visuallyHiddenStyle\n    };\n  }, [\n    name,\n    value,\n    id,\n    handleChange,\n    onBlurProp,\n    onFocusProp,\n    onKeyDown,\n    onKeyUp,\n    isRequired,\n    isChecked,\n    trulyDisabled,\n    isReadOnly,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaInvalid,\n    isInvalid,\n    ariaDescribedBy,\n    isDisabled,\n    tabIndex\n  ]);\n  const getLabelProps = useCallback2((props2 = {}, forwardedRef = null) => ({\n    ...props2,\n    ref: forwardedRef,\n    onMouseDown: callAllHandlers(props2.onMouseDown, stopEvent),\n    onTouchStart: callAllHandlers(props2.onTouchStart, stopEvent),\n    \"data-disabled\": dataAttr(isDisabled),\n    \"data-checked\": dataAttr(isChecked),\n    \"data-invalid\": dataAttr(isInvalid)\n  }), [isChecked, isDisabled, isInvalid]);\n  const state = {\n    isInvalid,\n    isFocused,\n    isChecked,\n    isActive,\n    isHovered,\n    isIndeterminate,\n    isDisabled,\n    isReadOnly,\n    isRequired\n  };\n  return {\n    state,\n    getRootProps,\n    getCheckboxProps,\n    getInputProps,\n    getLabelProps,\n    htmlProps\n  };\n}\nfunction stopEvent(event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\n\n// src/checkbox.tsx\nvar controlStyles = {\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  verticalAlign: \"top\",\n  userSelect: \"none\",\n  flexShrink: 0\n};\nvar rootStyles = {\n  cursor: \"pointer\",\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  verticalAlign: \"top\",\n  position: \"relative\"\n};\nvar checkAnim = keyframes({\n  from: {\n    opacity: 0,\n    strokeDashoffset: 16,\n    transform: \"scale(0.95)\"\n  },\n  to: {\n    opacity: 1,\n    strokeDashoffset: 0,\n    transform: \"scale(1)\"\n  }\n});\nvar indeterminateOpacityAnim = keyframes({\n  from: {\n    opacity: 0\n  },\n  to: {\n    opacity: 1\n  }\n});\nvar indeterminateScaleAnim = keyframes({\n  from: {\n    transform: \"scaleX(0.65)\"\n  },\n  to: {\n    transform: \"scaleX(1)\"\n  }\n});\nvar Checkbox = forwardRef(function Checkbox2(props, ref) {\n  const group = useCheckboxGroupContext();\n  const mergedProps = { ...group, ...props };\n  const styles = useMultiStyleConfig(\"Checkbox\", mergedProps);\n  const ownProps = omitThemingProps(props);\n  const {\n    spacing = \"0.5rem\",\n    className,\n    children,\n    iconColor,\n    iconSize,\n    icon = /* @__PURE__ */ React.createElement(CheckboxIcon, null),\n    isChecked: isCheckedProp,\n    isDisabled = group == null ? void 0 : group.isDisabled,\n    onChange: onChangeProp,\n    inputProps,\n    ...rest\n  } = ownProps;\n  let isChecked = isCheckedProp;\n  if ((group == null ? void 0 : group.value) && ownProps.value) {\n    isChecked = group.value.includes(ownProps.value);\n  }\n  let onChange = onChangeProp;\n  if ((group == null ? void 0 : group.onChange) && ownProps.value) {\n    onChange = callAll(group.onChange, onChangeProp);\n  }\n  const {\n    state,\n    getInputProps,\n    getCheckboxProps,\n    getLabelProps,\n    getRootProps\n  } = useCheckbox({\n    ...rest,\n    isDisabled,\n    isChecked,\n    onChange\n  });\n  const iconStyles = useMemo2(() => ({\n    animation: state.isIndeterminate ? `${indeterminateOpacityAnim} 20ms linear, ${indeterminateScaleAnim} 200ms linear` : `${checkAnim} 200ms linear`,\n    fontSize: iconSize,\n    color: iconColor,\n    ...styles.icon\n  }), [iconColor, iconSize, , state.isIndeterminate, styles.icon]);\n  const clonedIcon = cloneElement(icon, {\n    __css: iconStyles,\n    isIndeterminate: state.isIndeterminate,\n    isChecked: state.isChecked\n  });\n  return /* @__PURE__ */ React.createElement(chakra2.label, {\n    __css: { ...rootStyles, ...styles.container },\n    className: cx(\"chakra-checkbox\", className),\n    ...getRootProps()\n  }, /* @__PURE__ */ React.createElement(\"input\", {\n    className: \"chakra-checkbox__input\",\n    ...getInputProps(inputProps, ref)\n  }), /* @__PURE__ */ React.createElement(chakra2.span, {\n    __css: { ...controlStyles, ...styles.control },\n    className: \"chakra-checkbox__control\",\n    ...getCheckboxProps()\n  }, clonedIcon), children && /* @__PURE__ */ React.createElement(chakra2.span, {\n    className: \"chakra-checkbox__label\",\n    ...getLabelProps(),\n    __css: {\n      marginStart: spacing,\n      ...styles.label\n    }\n  }, children));\n});\nCheckbox.displayName = \"Checkbox\";\nexport {\n  Checkbox,\n  CheckboxGroup,\n  CheckboxIcon,\n  useCheckbox,\n  useCheckboxGroup\n};\n","// src/index.ts\nimport { useMemo, useState } from \"react\";\nimport { useCallbackRef } from \"@chakra-ui/react-use-callback-ref\";\nfunction useControllableProp(prop, state) {\n  const controlled = typeof prop !== \"undefined\";\n  const value = controlled ? prop : state;\n  return useMemo(() => [controlled, value], [controlled, value]);\n}\nfunction useControllableState(props) {\n  const {\n    value: valueProp,\n    defaultValue,\n    onChange,\n    shouldUpdate = (prev, next) => prev !== next\n  } = props;\n  const onChangeProp = useCallbackRef(onChange);\n  const shouldUpdateProp = useCallbackRef(shouldUpdate);\n  const [uncontrolledState, setUncontrolledState] = useState(defaultValue);\n  const controlled = valueProp !== void 0;\n  const value = controlled ? valueProp : uncontrolledState;\n  const setValue = useCallbackRef((next) => {\n    const setter = next;\n    const nextValue = typeof next === \"function\" ? setter(value) : next;\n    if (!shouldUpdateProp(value, nextValue)) {\n      return;\n    }\n    if (!controlled) {\n      setUncontrolledState(nextValue);\n    }\n    onChangeProp(nextValue);\n  }, [controlled, onChangeProp, value, shouldUpdateProp]);\n  return [value, setValue];\n}\nexport {\n  useControllableProp,\n  useControllableState\n};\n","type Modality = \"keyboard\" | \"pointer\"\ntype HandlerEvent = PointerEvent | MouseEvent | KeyboardEvent | FocusEvent\ntype Handler = (modality: Modality, e: HandlerEvent) => void\ntype FocusVisibleCallback = (isFocusVisible: boolean) => void\n\nlet hasSetup = false\nlet modality: Modality | null = null\nlet hasEventBeforeFocus = false\n\nconst handlers = new Set<Handler>()\n\nconst isMac = typeof window !== \"undefined\" && window.navigator != null ? /^Mac/.test(window.navigator.platform) : false\n\nfunction isValidKey(event: KeyboardEvent) {\n  return !(event.metaKey || (!isMac && event.altKey) || event.ctrlKey)\n}\n\nfunction trigger(modality: Modality, event: HandlerEvent) {\n  handlers.forEach((handler) => handler(modality, event))\n}\n\nfunction onKeyboardEvent(event: KeyboardEvent) {\n  hasEventBeforeFocus = true\n  if (isValidKey(event)) {\n    modality = \"keyboard\"\n    trigger(\"keyboard\", event)\n  }\n}\n\nfunction onPointerEvent(event: PointerEvent | MouseEvent) {\n  modality = \"pointer\"\n  if (event.type === \"mousedown\" || event.type === \"pointerdown\") {\n    hasEventBeforeFocus = true\n    trigger(\"pointer\", event)\n  }\n}\n\nfunction onWindowFocus(event: FocusEvent) {\n  // Firefox fires two extra focus events when the user first clicks into an iframe:\n  // first on the window, then on the document. We ignore these events so they don't\n  // cause keyboard focus rings to appear.\n  if (event.target === window || event.target === document) {\n    return\n  }\n\n  // If a focus event occurs without a preceding keyboard or pointer event, switch to keyboard modality.\n  // This occurs, for example, when navigating a form with the next/previous buttons on iOS.\n  if (!hasEventBeforeFocus) {\n    modality = \"keyboard\"\n    trigger(\"keyboard\", event)\n  }\n\n  hasEventBeforeFocus = false\n}\n\nfunction onWindowBlur() {\n  // When the window is blurred, reset state. This is necessary when tabbing out of the window,\n  // for example, since a subsequent focus event won't be fired.\n  hasEventBeforeFocus = false\n}\n\nfunction isFocusVisible() {\n  return modality !== \"pointer\"\n}\n\nfunction setupGlobalFocusEvents() {\n  if (typeof window === \"undefined\" || hasSetup) {\n    return\n  }\n\n  // Programmatic focus() calls shouldn't affect the current input modality.\n  // However, we need to detect other cases when a focus event occurs without\n  // a preceding user event (e.g. screen reader focus). Overriding the focus\n  // method on HTMLElement.prototype is a bit hacky, but works.\n  const { focus } = HTMLElement.prototype\n  HTMLElement.prototype.focus = function focusElement(...args) {\n    hasEventBeforeFocus = true\n    focus.apply(this, args)\n  }\n\n  document.addEventListener(\"keydown\", onKeyboardEvent, true)\n  document.addEventListener(\"keyup\", onKeyboardEvent, true)\n\n  // Register focus events on the window so they are sure to happen\n  // before React's event listeners (registered on the document).\n  window.addEventListener(\"focus\", onWindowFocus, true)\n  window.addEventListener(\"blur\", onWindowBlur, false)\n\n  if (typeof PointerEvent !== \"undefined\") {\n    document.addEventListener(\"pointerdown\", onPointerEvent, true)\n    document.addEventListener(\"pointermove\", onPointerEvent, true)\n    document.addEventListener(\"pointerup\", onPointerEvent, true)\n  } else {\n    document.addEventListener(\"mousedown\", onPointerEvent, true)\n    document.addEventListener(\"mousemove\", onPointerEvent, true)\n    document.addEventListener(\"mouseup\", onPointerEvent, true)\n  }\n\n  hasSetup = true\n}\n\nexport function trackFocusVisible(fn: FocusVisibleCallback) {\n  setupGlobalFocusEvents()\n\n  fn(isFocusVisible())\n  const handler = () => fn(isFocusVisible())\n\n  handlers.add(handler)\n  return () => {\n    handlers.delete(handler)\n  }\n}\n"],"names":["visuallyHiddenStyle","border","clip","height","width","margin","padding","overflow","whiteSpace","position","VisuallyHidden","chakra","baseStyle","displayName","createContext","name","strict","useCheckboxGroupContext","cx","classNames","filter","Boolean","join","dataAttr","condition","callAllHandlers","fns","event","some","fn","defaultPrevented","CheckIcon","props","React","viewBox","style","fill","strokeWidth","stroke","strokeDasharray","points","IndeterminateIcon","x1","x2","y1","y2","CheckboxIcon","isIndeterminate","isChecked","rest","BaseIcon","display","alignItems","justifyContent","omit","object","keysToOmit","clone","Object","assign","key","useCheckbox","formControlProps","useFormControlProps","isDisabled","isReadOnly","isRequired","isInvalid","id","onBlur","onFocus","ariaDescribedBy","defaultChecked","checkedProp","isFocusable","onChange","value","tabIndex","ariaLabel","ariaLabelledBy","ariaInvalid","htmlProps","onChangeProp","useCallbackRef2","onBlurProp","onFocusProp","useState","isFocusVisible","setIsFocusVisible","isFocused","setFocused","isHovered","setHovered","isActive","setActive","useEffect","trackFocusVisible","inputRef","useRef","rootIsLabelElement","setRootIsLabelElement","checkedState","setCheckedState","isControlled","handleChange","useCallback2","preventDefault","target","checked","useSafeLayoutEffect","current","indeterminate","useUpdateEffect","el","form","onreset","trulyDisabled","onKeyDown","onKeyUp","getCheckboxProps","props2","forwardedRef","onPressDown","ref","onMouseDown","onMouseUp","onMouseEnter","onMouseLeave","getRootProps","mergeRefs","node","tagName","onClick","_a","click","requestAnimationFrame","_a2","focus","getInputProps","type","required","disabled","readOnly","getLabelProps","stopEvent","onTouchStart","state","stopPropagation","controlStyles","verticalAlign","userSelect","flexShrink","rootStyles","cursor","checkAnim","keyframes","from","opacity","strokeDashoffset","transform","to","indeterminateOpacityAnim","indeterminateScaleAnim","Checkbox","forwardRef","group","mergedProps","styles","useMultiStyleConfig","ownProps","omitThemingProps","spacing","className","children","iconColor","iconSize","icon","isCheckedProp","inputProps","includes","arg","forEach","callAll","iconStyles","useMemo2","animation","fontSize","color","clonedIcon","cloneElement","__css","chakra2","container","control","marginStart","label","useControllableState","valueProp","defaultValue","shouldUpdate","prev","next","useCallbackRef","shouldUpdateProp","uncontrolledState","setUncontrolledState","controlled","setValue","nextValue","hasSetup","modality","hasEventBeforeFocus","handlers","Set","isMac","window","navigator","test","platform","trigger","modality2","handler","onKeyboardEvent","metaKey","altKey","ctrlKey","isValidKey","onPointerEvent","onWindowFocus","document","onWindowBlur","HTMLElement","prototype","args","apply","this","addEventListener","PointerEvent","setupGlobalFocusEvents","add","delete"],"sourceRoot":""}